<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" >
<channel>
<title>Word Aligned</title>
<link>http://wordaligned.org</link>
<description>tales from the code face</description>
<dc:creator>tag@wordaligned.org</dc:creator>
<language>en-gb</language>
<item>
<title>Spolsky podcast causes exercise bike incident</title>
<description>&lt;p&gt;&lt;a href=&quot;http://www.objectmentor.com/omTeam/martin_r.html&quot;&gt;&lt;img src=&quot;http://www.objectmentor.com/Images/photo_martin_r.jpg&quot; alt=&quot;Robert C. Martin&quot; width=&quot;192&quot; height=&quot;256&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Robert C. Martin opens &lt;a href=&quot;http://blog.objectmentor.com/articles/2009/01/31/quality-doesnt-matter-that-much-jeff-and-joel&quot;&gt;a rant&lt;/a&gt; on his Object Mentor blog with one of the best sentences I&amp;#8217;ve read in a while.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I was riding my exercise bike, listening to Stack Overflow #38 when I heard Jeff Atwood and Joel Spolsky say &amp;#8220;Quality just doesn&amp;#8217;t matter that much.&amp;#8221; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I&amp;#8217;ve never been one for exercise bikes or podcasts but I&amp;#8217;m guessing Robert Martin tuned in for some light entertainment rather than provocation. As it turned out, though:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I nearly fell off my bike.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Happily no real harm was done and Robert Martin recovered sufficiently to post &lt;a href=&quot;http://blog.objectmentor.com/articles/2009/01/31/quality-doesnt-matter-that-much-jeff-and-joel&quot;&gt;his response&lt;/a&gt; to the &lt;a href=&quot;http://blog.stackoverflow.com/2009/01/podcast-38/&quot;&gt;podcast&lt;/a&gt;. The debate continues in the &lt;a href=&quot;http://blog.objectmentor.com/articles/2009/01/31/quality-doesnt-matter-that-much-jeff-and-joel#comments&quot;&gt;comments&lt;/a&gt; on this article and &lt;a href=&quot;http://glyph.twistedmatrix.com/2009/02/joel-un-test.html&quot;&gt;elsewhere&lt;/a&gt;. I don&amp;#8217;t want to weigh into this particular argument myself, but out of curiosity I did listen to exactly what Atwood and Spolsky had to say around 42 minutes into the show (yes, a &lt;a href=&quot;http://www.joelonsoftware.com/items/2009/01/31.html&quot;&gt;transcript of the relevant segment exists&lt;/a&gt;, but I wanted to listen to the original; having done so, I don&amp;#8217;t think I&amp;#8217;ll bother with the rest, thanks). Spolsky does almost all of the talking. Whilst managing to sound calm and thoughtful, his actual words are plain rude.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[&amp;#8230;] it seems to me like a lot of the Object Oriented Design principles you&amp;#8217;re hearing lately from people like &lt;strong&gt;Robert Martin&lt;/strong&gt; and Kent Beck and so forth have gone off the deep end into architecture for architecture&amp;#8217;s sake [&amp;#8230;] They&amp;#8217;ve just gone off the deep end, and &lt;strong&gt;I don&amp;#8217;t think these people write very much code&lt;/strong&gt; if they&amp;#8217;re coming up with these principles, to be honest, it doesn&amp;#8217;t even make sense.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(Emphasis mine.)&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;continue-reading&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I think it&amp;#8217;s Spolsky&amp;#8217;s suggestion that people like Robert Martin don&amp;#8217;t write much code which bugs Martin the most, and I&amp;#8217;m not surprised. Listening to the podcast, I didn&amp;#8217;t hear anyone actually say &amp;#8220;Quality doesn&amp;#8217;t matter&amp;#8221;. Maybe I didn&amp;#8217;t listen long enough, but I wonder if it&amp;#8217;s actually Martin&amp;#8217;s spin on what&amp;#8217;s been said. Robert Martin is a fervent promoter of code quality. His view (as I understand it) is that there are no shortcuts, and that test driven development is a great way to deliver quality.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You see, I think quality matters. I think the quality of my code matters, even at the smallest scale. I think the quality of my systems matters. I think the quality of my tests matters. And&amp;#8230; I think the quality of my advice matters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;amazon&quot;&gt;&lt;a href=&quot;http://www.amazon.com/gp/product/0135974445?ie=UTF8&amp;amp;tag=wordalig-20&quot;&gt;&lt;img src=&quot;http://wordaligned.org/images/books/agile-software-development.jpg&quot; alt=&quot;Agile Software Design cover&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;Reading this prompts me to mention a book I&amp;#8217;ve been wanting to discuss here for a while &amp;#8212; &lt;a href=&quot;http://www.amazon.com/gp/product/0135974445?ie=UTF8&amp;amp;tag=wordalig-20&quot;&gt;&amp;#8220;Agile Software Development: Principles, Patterns, and Practices&amp;#8221;&lt;/a&gt;, by Robert C. Martin. It&amp;#8217;s a book I don&amp;#8217;t hesistate to recommend: packed with code, knowledge and character, it demonstrates real world software development by example. It&amp;#8217;s arguably a better guide to design patterns for C++ and Java programmers than the more famous &lt;a href=&quot;http://en.wikipedia.org/wiki/Design_Patterns&quot;&gt;&amp;#8220;Gang of Four&amp;#8221;&lt;/a&gt; book. It&amp;#8217;s also a wide-ranging and ambitious book. You&amp;#8217;ll find a manifesto, checklists of principles and practices, cartoons, quotations, a dialogue between pair-programmers, an Appendix on UML, even a satirical short story.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/gp/product/0135974445?ie=UTF8&amp;amp;tag=wordalig-20&quot;&gt;Agile Software Development&lt;/a&gt; tells it like it is. It&amp;#8217;s as a survival guide for working programmers who want to do the best they can. Programmers who use C++, Java and UML. Programmers who suffer constant pressure from pointy-haired bosses. Programmers who resist the urge to add global variables to solve their immediate problems, who introduce interfaces to improve architecture, who write Java code which generates more boilerplate Java. Programmers who care.&lt;/p&gt;
&lt;p&gt;Yet I have reservations. Agile Software Development is far from perfect. The mix of fonts on the front cover is a fair indication of what&amp;#8217;s inside: the book is poorly designed. The book promotes clean, well-factored code, yet this advice doesn&amp;#8217;t seem to have been applied to itself. In the preface Robert Martin describes the historical forces which have shaped the book &amp;#8212; an article from here, some chapters from there, a change of direction &amp;#8212; it&amp;#8217;s reminiscent of a stop-start software project, and too much of that history shows.  Reading the book I also tripped over several typos and the occasional broken code sample. Sad to say, but the flaws in this book have coloured my judgement of what Robert Martin has to say about code quality.&lt;/p&gt;
&lt;p&gt;Robert Martin suggests Spolsky&amp;#8217;s comments are:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a symptom of someone has focussed on business and lost his technical chops.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Certainly Joel Spolsky seems focused on business and his business revolves around the &lt;a href=&quot;http://www.joelonsoftware.com&quot;&gt;Joel-on-Software&lt;/a&gt; brand. Whether or not you buy into that brand, he&amp;#8217;s a skilful writer. The material on his website is always carefully written and well presented.&lt;/p&gt;
&lt;hr /&gt;
&lt;div class=&quot;amazon&quot;&gt;&lt;a href=&quot;http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882&quot;&gt;&lt;img src=&quot;http://wordaligned.org/images/books/clean-code.jpg&quot; alt=&quot;Clean Code cover&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://accu.org/index.php/conferences/accu_conference_2009&quot;&gt;&lt;img src=&quot;http://accu.org/content/images/conferences/2009/accu2009web.png&quot; alt=&quot;ACCU 2009&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Robert C. Martin will be opening &lt;a href=&quot;http://accu.org/index.php/conferences/accu_conference_2009&quot;&gt;ACCU 2009&lt;/a&gt; with a keynote presentation entitled &amp;#8220;The Birth of Software Craftsmanship&amp;#8221;. I&amp;#8217;d love to be there to hear him speak. I see he has a new book out, &lt;a href=&quot;http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882&quot;&gt;Clean Code: A Handbook of Agile Software Craftsmanship&lt;/a&gt;. Should I read it?&lt;/p&gt;
&lt;h5&gt;&lt;a name=&quot;feedback&quot;&gt;Feedback&lt;/a&gt;&lt;/h5&gt;
&lt;div id=&quot;feedback_div&quot;&gt;&lt;ol id=&quot;feedback&quot; class=&quot;feedback&quot;&gt;&lt;li class=&quot;feedbackitem&quot;&gt;&lt;div class=&quot;author&quot;&gt;&lt;cite&gt;Greg Wilson&lt;/cite&gt; 2009-02-03&lt;/div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p&gt;Well, I liked it: &lt;a href=&quot;http://pyre.third-bit.com/blog/archives/1763.html&quot;&gt;http://pyre.third-bit.com/blog/archives/1763.html&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</description>
<dc:date>2009-02-03</dc:date>
<guid>http://wordaligned.org/articles/spolsky-podcast</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/spolsky-podcast</link>
<category>Spolsky</category>
</item>

</channel>
</rss>
