<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" >
<channel>
<title>Word Aligned</title>
<link>https://wordaligned.org</link>
<description>tales from the code face</description>
<dc:creator>tag@wordaligned.org</dc:creator>
<language>en-gb</language>
<item>
<title>Robot wars</title>
<description>&lt;p&gt;I recently &lt;a href=&quot;https://wordaligned.org/articles/turing-tests-and-train-trackers.html&quot;&gt;described&lt;/a&gt; an encounter with a robot which set me thinking about the Turing Test. These days it&amp;#8217;s not just people who need to distinguish between people and computers. Computers have to too.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m thinking about all those web forms designed to foil spam-bots: sum these numbers, answer this question, type the letters hidden in this image. The intelligence behind these forms is entirely mechanical, and the odd thing is that most of the tests are the kind of things that robots are capable of doing well; whereas, being colour-blind, it usually takes me a few goes to pass the hidden-text tests. I guess this first line of defence is simply a way to make a site less attractive to spam-bots, in the hopes they&amp;#8217;ll buzz off and annoy another computer.&lt;/p&gt;
&lt;p&gt;It turns out that this spin on the Turing Test is known as a &lt;a href=&quot;http://en.wikipedia.org/wiki/Captcha&quot;&gt;CAPTCHA&lt;/a&gt; &amp;#8212; a &lt;em&gt;C&lt;/em&gt;ompletely &lt;em&gt;A&lt;/em&gt;utomated &lt;em&gt;P&lt;/em&gt;ublic &lt;em&gt;T&lt;/em&gt;uring test to tell &lt;em&gt;C&lt;/em&gt;omputers and &lt;em&gt;H&lt;/em&gt;umans &lt;em&gt;A&lt;/em&gt;part. I discovered this in a roundabout way, when I chanced upon an &lt;a href=&quot;http://blogoscoped.com/archive/2007-07-05-n38.html&quot;&gt;anti-captcha&lt;/a&gt;. Being human I instantly recognised this as a funny joke. &lt;a href=&quot;http://blogoscoped.com/forum/101776.html&quot;&gt;Hah!&lt;/a&gt;&lt;/p&gt;</description>
<dc:date>2007-07-06</dc:date>
<guid>https://wordaligned.org/articles/robot-wars</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>https://wordaligned.org/articles/robot-wars</link>
<category>Turing</category>
</item>

<item>
<title>Turing Tests and Train Trackers</title>
<description>&lt;p&gt;In his classic paper &lt;a href=&quot;http://loebner.net/Prizef/TuringArticle.html&quot;&gt;&amp;#8220;Computing Machinery and Intelligence&amp;#8221;&lt;/a&gt; Alan Turing side-steps the question of whether or not computers can think by describing a simple experiment. He asks us to consider a discussion with a human and a computer pretending to be a human conducted via a text interface. If we can&amp;#8217;t tell which is which, the computer passes the test.&lt;/p&gt;
&lt;p&gt;&lt;span /&gt;Today I had a chat with a computer using an &lt;em&gt;audio&lt;/em&gt; interface when I phoned up national rail enquiries for timetable information. Actually I spoke to two computers: a female on the main switchboard who, having categorised my enquiry, passed me on to one of her colleagues at &lt;a href=&quot;http://www.nationalrail.co.uk/traintracker/&quot;&gt;train tracker&lt;/a&gt;. This colleague never pretended to be a human, but he did have a lively voice and he dealt with me politely:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#8220;Thanks &amp;#8230; I&amp;#8217;m sorry, I missed that &amp;#8230; Was that seven in the morning or seven in the evening? Say &amp;#8216;morning&amp;#8217; or &amp;#8216;evening&amp;#8217; &amp;#8230; Right &amp;#8230; OK then &amp;#8230;&amp;#8221;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Actually, I&amp;#8217;ve spoken to him before, and he seemed to remember this. Maybe I should make a note of his direct number.&lt;/p&gt;
&lt;h3 id=&quot;nice-but-dim&quot;&gt;Nice but Dim&lt;/h3&gt;
&lt;p&gt;My only complaint is that, I&amp;#8217;m sorry to have to say this, but he was a bit &lt;em&gt;thick&lt;/em&gt;. Didn&amp;#8217;t catch my drift, if you know what I&amp;#8217;m saying. Couldn&amp;#8217;t stop apologising. Kept repeating what I&amp;#8217;d just told him. &lt;/p&gt;
&lt;p&gt;Most of the time I access train information far more easily using a real computer anyway.&lt;/p&gt;
&lt;h3 id=&quot;just-plain-stupid&quot;&gt;Just plain stupid&lt;/h3&gt;
&lt;p&gt;Network rail have been using robots to announce train information in their stations for a long while now. They have a female and a male announcer. (I wonder what their names are?)  Most of the time these unfortunate robots are left to do the dirty work of apologising just how late services are running.&lt;/p&gt;
&lt;p&gt;If a train is running a couple of minutes late:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#8220;I&amp;#8217;m sorry to announce that the 07:20 to London Paddington is running 2 minutes late.&amp;#8221;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Most passengers would be delighted to get on a train which was &lt;em&gt;only&lt;/em&gt; a couple of minutes late, but we soon learn the robot was actually preparing us for worse news:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#8220;I&amp;#8217;m very sorry to announce &amp;#8230; 10 minutes late.&amp;#8221;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;which soon becomes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#8220;I&amp;#8217;m extremely sorry to announce &amp;#8230; 30 minutes late.&amp;#8221;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When things go really wrong at a busy station like Bristol Temple Meads the whole station rings with a cacophony of hollow apologies&lt;sup&gt;&lt;a href=&quot;https://wordaligned.org/articles/turing-tests-and-train-trackers#footnote1&quot;&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Optimization_(computer_science)#Quotes&quot;&gt;1&lt;/a&gt;&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Thank goodness for the actual staff on the actual trains when they actually arrive who do a decent job of explaining what the real problem was.&lt;/p&gt;
&lt;h3 id=&quot;an-alternative-approach&quot;&gt;An alternative approach&lt;/h3&gt;
&lt;p&gt;In the middle of the last century Turing predicted computers would perform well in his &lt;a href=&quot;http://loebner.net/Prizef/TuringArticle.html&quot;&gt;test&lt;/a&gt; in fifty years&amp;#8217; time (a few years before now, that is). Whether or not they could actually &lt;em&gt;think&lt;/em&gt; he believed a meaningless question, but he did say:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#8220;Nevertheless I believe that at the end of the century the use of words and general educated opinion will have altered so much that one will be able to speak of machines thinking without expecting to be contradicted.&amp;#8221;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span /&gt;Thinking? It&amp;#8217;s certainly common to speak of computers as being stupid or annoying. National rail&amp;#8217;s robots aren&amp;#8217;t trying to fool us into thinking they&amp;#8217;re real people, but they are trying to present a more human interface and for me it&amp;#8217;s the repeated apologies that grate. Is it, perhaps, that we&amp;#8217;re afraid of computers taking over, so we make them behave like obsequious slaves? Or is it just poor interface design&lt;sup&gt;&lt;a href=&quot;https://wordaligned.org/articles/turing-tests-and-train-trackers#footnote2&quot;&gt;&lt;a href=&quot;http://www.pragmaticprogrammer.com/titles/ruby/index.html&quot;&gt;2&lt;/a&gt;&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a better idea. The computer I use can speak in a number of voices: male, female and novelty. My personal favourite is the &amp;#8220;hysterical&amp;#8221; voice, which mixes speech with uncontrolled giggling. Here&amp;#8217;s how a hysterical delayed train announcement &lt;a href=&quot;https://wordaligned.org/files/hysterical_train_delay.mp3&quot; title=&quot;hysterical train delay&quot;&gt;would sound&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;An improvement, I think.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a id=&quot;footnote1&quot;&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Optimization_(computer_science)#Quotes&quot;&gt;1&lt;/a&gt;&lt;/a&gt;
There are parallels with my day job here. When developing software it&amp;#8217;s all too easy to concentrate on smooth operation; on what&amp;#8217;s meant to happen when the user does what they&amp;#8217;re supposed to, when their inputs are valid and the system has plenty of memory, just as the train announcement system probably works just fine when trains run on time. We may well attract a few users with such software, but if, when things go wrong, those same users feel out of control, or lose their data, or simply get irritated, then it&amp;#8217;s going to be hard to regain their goodwill.&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;footnote2&quot;&gt;&lt;a href=&quot;http://www.pragmaticprogrammer.com/titles/ruby/index.html&quot;&gt;2&lt;/a&gt;&lt;/a&gt;
Yes, it is poor interface design. So often when dealing with a computer we have to repeat ourselves or spell things out: yes, I really do want to delete that file (but provide me an undo button when things go wrong); and &lt;em&gt;yes&lt;/em&gt;, if I can&amp;#8217;t edit the file just open me a read-only version for goodness sake (a quick note in the status bar will let me know what&amp;#8217;s going on). Computers should understand that sometimes it&amp;#8217;s easier to ask &lt;a href=&quot;https://wordaligned.org/articles/permission-and-forgiveness.html&quot;&gt;forgiveness than permission&lt;/a&gt;.&lt;/p&gt;</description>
<dc:date>2007-06-13</dc:date>
<guid>https://wordaligned.org/articles/turing-tests-and-train-trackers</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>https://wordaligned.org/articles/turing-tests-and-train-trackers</link>
<category>Turing</category>
</item>

<item>
<title>1, 6, 21, 107, &#8230; ?</title>
<description>&lt;p&gt;Apparently, this is the &lt;a href=&quot;http://www.research.att.com/~njas/sequences/A060843&quot;&gt;busy beaver
sequence&lt;/a&gt;,
described in the fabulous &lt;a href=&quot;http://www.research.att.com/~njas/sequences/Seis.html&quot;&gt;On-Line Encyclopedia of Integer
Sequences&lt;/a&gt; as:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The maximal number of steps that an n-state &lt;a href=&quot;http://en.wikipedia.org/wiki/Turing_machine&quot;&gt;Turing machine&lt;/a&gt; can make
on an initially blank tape before eventually halting.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can even
&lt;a href=&quot;http://www.research.att.com/~njas/sequences/play?want=A060843&amp;amp;auto=y&quot;&gt;&lt;em&gt;listen&lt;/em&gt;&lt;/a&gt;
to this sequence if you&amp;#8217;re prepared to allow pop-ups and plugins.&lt;/p&gt;</description>
<dc:date>2006-12-17</dc:date>
<guid>https://wordaligned.org/articles/1-6-21-107</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>https://wordaligned.org/articles/1-6-21-107</link>
<category>Turing</category>
</item>

<item>
<title>Different Angles on Legacy Code</title>
<description>&lt;p&gt;Two rather different angles on legacy code.&lt;/p&gt;
&lt;p&gt;The first comes from Bjarne Stroustrup&amp;#8217;s &lt;a href=&quot;http://www.research.att.com/~bs/bs_faq.html#legacy&quot;&gt;home page&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#8220;Legacy code&amp;#8221; is a term often used derogatorily to characterize
code that is written in a language or style that (1) the
speaker/writer consider outdated and/or (2) is competing with
something sold/promoted by the speaker/writer. &amp;#8220;Legacy code&amp;#8221; often
differs from its suggested alternative by actually working and
scaling.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And the second comes from Michael Feather&amp;#8217;s paper, &lt;a href=&quot;http://www.objectmentor.com/resources/articles/WorkingEffectivelyWithLegacyCode.pdf&quot;&gt;&amp;#8220;Working Effectively With Legacy Code&amp;#8221;&lt;/a&gt;, which I guess forms the root of the book of the same name:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The main thing that distinguishes legacy code from non-legacy code is tests, or rather a lack of tests.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span id=&quot;continue-reading&quot;/&gt;&lt;/p&gt;
&lt;p&gt;These very different angles aren&amp;#8217;t mutually exclusive. You &lt;em&gt;could&lt;/em&gt; have code
without tests which works &amp;#8212; and which even scales, I suppose. On the
other hand, I&amp;#8217;d hesitate to change code which works but which doesn&amp;#8217;t
have any tests, and I&amp;#8217;d be even more reluctant to scale up such code.&lt;/p&gt;
&lt;p&gt;What I particularly like about &lt;a href=&quot;http://www.objectmentor.com/resources/articles/WorkingEffectivelyWithLegacyCode.pdf&quot;&gt;Feathers&amp;#8217;&lt;/a&gt; definition is
that it&amp;#8217;s objective &amp;#8212; in the same way that the &lt;a href=&quot;http://en.wikipedia.org/wiki/Turing_test&quot;&gt;Turing Test&lt;/a&gt; is
objective. Rather than getting sucked into emotive arguments about
whether machines can think, &lt;a href=&quot;http://www.turing.org.uk/turing/&quot;&gt;Turing&lt;/a&gt; devised a practical experiment
to determine a machine&amp;#8217;s ability to appear sentient. Similarly, Feathers&amp;#8217;
metric is easy to apply.&lt;/p&gt;
&lt;p&gt;If you&amp;#8217;re not convinced, here&amp;#8217;s the paragraph in full.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The main thing that distinguishes legacy code from non-legacy code
is tests, or rather a lack of tests. We can get a sense of this with
a little thought experiment: how easy would it be to modify your
code base if it could bite back, if it could tell you when you made
a mistake? It would be pretty easy, wouldn&amp;#8217;t it? Most of the fear
involved in making changes to large code bases is fear of
introducing subtle bugs; fear of changing things inadvertently. With
tests, you can make things better with impunity. To me, the
difference is so critical, it overwhelms any other distinction. With
tests, you can make things better. Without them, you just don&amp;#8217;t know
whether things are getting better or worse.&lt;/p&gt;
&lt;/blockquote&gt;</description>
<dc:date>2006-12-06</dc:date>
<guid>https://wordaligned.org/articles/different-angles-on-legacy-code</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>https://wordaligned.org/articles/different-angles-on-legacy-code</link>
<category>Turing</category>
</item>

</channel>
</rss>
