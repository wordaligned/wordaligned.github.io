<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" >
<channel>
<title>Word Aligned</title>
<link>http://wordaligned.org</link>
<description>tales from the code face</description>
<dc:creator>tag@wordaligned.org</dc:creator>
<language>en-gb</language>
<item>
<title>Computer World</title>
<description>&lt;p&gt;&lt;a data-flickr-embed="true"  href="https://www.flickr.com/photos/thomasguest/37406493811/in/dateposted-friend/" title="The Hitchhiker&amp;#x27;s Guide to the Galaxy"&gt;&lt;img src="https://farm5.staticflickr.com/4371/37406493811_0d17fab6cf.jpg" width="401" height="500" alt="The Hitchhiker&amp;#x27;s Guide to the Galaxy"&gt;&lt;/a&gt;&lt;script async src="http://wordaligned.org//embedr.flickr.com/assets/client-code.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;Douglas Adams&amp;#8217; &amp;#8220;Hitchhiker&amp;#8217;s Guide to the Galaxy&amp;#8221; tells the story of the two most powerful computers ever made. The first, Deep Thought, was designed to figure out the meaning of Life the Universe and Everything. After 7,500,000 years of processing it came up with the concise but unedifying Ultimate Answer of 42. It then undertook the task of designing its successor, a computer sophisticated enough to calculate the Ultimate Question:
&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&amp;#8220;&amp;#8230; A computer which can calculate the Question to the Ultimate Answer, a computer of such infinite and subtle complexity that organic life itself shall form part of its operational matrix &amp;#8230; Yes! I shall design this computer for you. And I shall name it also unto you. And it shall be called &amp;#8230; The Earth.&amp;#8221;
&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;When I first heard this it seemed ridiculous. Now, almost 40 years on, I&amp;#8217;ve realised it&amp;#8217;s true.
&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s no longer correct to think of computers as discrete units. Computers have the property that when you connect two of them you get another computer, and so on. The network &lt;strong&gt;is&lt;/strong&gt; the computer. The Apple in your hand, the Echo on your shelf, the chip in your &lt;a href="https://www.amazon.co.uk/Scepticism-Inc-Bo-Fowler/dp/009927468X"&gt;shopping trolley&lt;/a&gt; &amp;#8212; all combine to form a global connected device. And as Adams predicted, we ourselves form part of the operating system, constantly feeding data back in.
&lt;/p&gt;
&lt;img src="http://wordaligned.org/images/planet-earth.jpg" alt="Planet Earth"/&gt;

&lt;p&gt;Douglas Adams&amp;#8217; insight puts software development into perspective. True: we no longer print our product on silicon or ship it in boxes, and yes: we accept &lt;a href="http://wordaligned.org/articles/why-software-development-isnt-like-construction"&gt;construction&lt;/a&gt; is not the right metaphor, but: nor is production. &lt;a href="http://swanseacon.co.uk/schedule/#session-27"&gt;Professor Dave Snowden&lt;/a&gt; talks about entanglement &amp;#8212; think of a system growing like brambles in a thicket. He emphasises what&amp;#8217;s natural, evolutionary and human. Object oriented design lost out when it narrowed its focus. Remember, people are objects too. The world is our platform.
&lt;/p&gt;</description>
<dc:date>2017-09-30</dc:date>
<guid>http://wordaligned.org/articles/computer-world</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/computer-world</link>
<category>Apple</category>
</item>

<item>
<title>Desktop preferences</title>
<description>&lt;p&gt;Paul grumbled about the lack of new content on &lt;a href="http://wordaligned.org" title="Once popular, now dormant programming blog"&gt;wordaligned.org&lt;/a&gt; and since he&amp;#8217;d just bought me lunch I thought I&amp;#8217;d better do something about it. He also said he didn&amp;#8217;t like the stuff about &lt;a href="http://wordaligned.org/tag/algorithms/" title="Wordaligned articles about algorithms"&gt;algorithms&lt;/a&gt; and maths. Well, that makes my life easier too.
&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m moving jobs &amp;#8212; the &lt;a href="http://www.wagamama.com/locations/showlocation/555/" title="Yaki Udon, fat noodles, filling"&gt;lunch&lt;/a&gt; he paid for was a leaving do &amp;#8212; and my employers kindly allowed me to buy this macbook pro at a reasonable price. Of course I had to wipe and reinstall it. It took an hour and a half to fill the hard drive with zeros and a similar amount of time to load a few ones back on&lt;a id="fn1link" href="http://wordaligned.org/articles/desktop-preferences#fn1"&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/a&gt;.
&lt;/p&gt;
&lt;img src="http://upload.wikimedia.org/wikipedia/en/0/07/Itchyscratchy.png" alt="Itchy" /&gt;

&lt;p&gt;Installation done, I set about customisation. The official term is &lt;a href="http://support.apple.com/kb/HT2490" title="Set your preferences"&gt;preferences&lt;/a&gt; but &lt;strong&gt;annoyances&lt;/strong&gt; would be more accurate: you fix things which irk you before they cause real pain or, worse, you become immune to them. Typing hurt until I set key repeat to the max. Thomas Guest&amp;#8217;s macbook pro is a lousy name. I&amp;#8217;ve used &lt;a href="http://wordaligned.org/articles/oberon-cromarty-lisa-waggledance-ariel.html" title="Computer names"&gt;Itchy&lt;/a&gt; before and I like it so I&amp;#8217;m using it again. I booted Safari off the dock and stood Chrome in its place. I undocked some other things which I didn&amp;#8217;t recognise by their icons and were obviously of no use to me. By now I&amp;#8217;d seen the galactic login backdrop too many times. I&amp;#8217;ve never found a customisable preference for it but &lt;a href="https://www.google.co.uk/search?q=os+x+change+login+background" title="2nd hit worked for me"&gt;google&lt;/a&gt; told me what to do.
&lt;/p&gt;
&lt;div class="typocode"&gt;

&lt;pre class="prettyprint"&gt;$ sudo cp Downloads/matt-burns-pylon.jpg \
          /System/Library/CoreServices/DefaultDesktop.jpg

&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href="http://www.flickr.com/photos/floater81/4433735546/" title="IMG_3738 by mattburns.co.uk, on Flickr"&gt;&lt;img src="http://farm5.staticflickr.com/4050/4433735546_42b2bf1ce7.jpg" width="500" height="333" alt="IMG_3738"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Actually, that&amp;#8217;s pretty much all I needed to fix. Now it really was about preferences I prefer. Aquamacs. Skype. I chose two pictures for my desktop backgrounds. What you want on a desktop &amp;#8212; no, what &lt;strong&gt;I&lt;/strong&gt; want on &lt;strong&gt;my&lt;/strong&gt; desktop &amp;#8212; is something gorgeous but not distracting, something personal but not too personal, something which works in widescreen, something of a &lt;a href="http://www.flickr.com/photos/rbrwr/308905101" title="Too grainy for my desktop"&gt;high enough resolution&lt;/a&gt;, something which &lt;a href="http://www.flickr.com/photos/thomasguest/5017113982" title="Which sadly rules out this picture, my favourite of the sketches I made at Bristol museum"&gt;doesn&amp;#8217;t get spoiled&lt;/a&gt; when application windows are slathered over it. I went with a couple more &lt;a href="http://www.flickr.com/photos/floater81/4432979527/in/photostream" title="Superb pictures of the second severn crossing"&gt;Burnsy&amp;#8217;s&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.flickr.com/photos/floater81/4432979527/" title="The Second Severn Crossing by mattburns.co.uk, on Flickr"&gt;&lt;img src="http://farm3.staticflickr.com/2723/4432979527_aaac753da6.jpg" width="500" height="333" alt="The Second Severn Crossing"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;I remember the second Severn crossing being built. I&amp;#8217;d just moved to Bristol, joining a company which did virtual reality. The hardware was too expensive and the software too slow but we were a good team. Summer lunchtimes, we would play frisbee on the grassy hill by the Almondsbury garden centre. You could see the estuary, the new concrete pylons stepping into it, and, rising to the East, the towers of the original suspension bridge. Anyone who cycles around Bristol knows this view well. Interval training with &lt;a href="https://twitter.com/drbyrne255/status/187257262748876800"&gt;Owen&lt;/a&gt;, we spin out along Passage Road and catch our breath before turning back.
&lt;/p&gt;
&lt;iframe width="540" height="256" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="https://maps.google.co.uk/maps?f=q&amp;amp;source=embed&amp;amp;hl=en&amp;amp;geocode=&amp;amp;q=aust&amp;amp;aq=&amp;amp;sll=51.587465,-4.195722&amp;amp;sspn=0.019305,0.035963&amp;amp;ie=UTF8&amp;amp;hq=&amp;amp;hnear=Aust,+South+Gloucestershire,+United+Kingdom&amp;amp;t=m&amp;amp;layer=c&amp;amp;cbll=51.593919,-2.632873&amp;amp;panoid=b9ap7_VnelTDzEUhtGFcPQ&amp;amp;cbp=13,259.11,,0,0&amp;amp;ll=51.590016,-2.632856&amp;amp;spn=0.013651,0.046349&amp;amp;z=14&amp;amp;output=svembed"&gt;&lt;/iframe&gt;

&lt;p&gt;More recently I&amp;#8217;ve moved to Swansea but kept my job in Bristol, crossing from and to Wales &lt;a href="http://en.wikipedia.org/wiki/Severn_Tunnel" title="The tunnel was built by the Great Western Railway between 1873 and 1886"&gt;under the river&lt;/a&gt; twice a week, Tuesdays and Thursdays, working from home on Mondays and Fridays. Now that too has come to an end. We were a good team but &amp;#8230; anyway. My new job will be home-based. Next I&amp;#8217;ll be partitioning the hard drive and booting into Linux.
&lt;/p&gt;
&lt;p style="text-align:center"&gt;&amp;sect;&lt;/p&gt;

&lt;p&gt;My thanks, again, to &lt;a href="http://www.mattburns.co.uk/mattburns.html"&gt;Matt Burns&lt;/a&gt; for allowing me to use his superb photos.
&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;a id="fn1" href="http://wordaligned.org/articles/desktop-preferences#fn1link"&gt;[1]&lt;/a&gt; Which reminds me, I should write about a cunning data structure which lazily initialises a sparse vector. &lt;a href="http://wordaligned.org" title="Once popular, now dormant programming blog"&gt;Wordaligned.org&lt;/a&gt; &lt;strong&gt;is&lt;/strong&gt; a programming blog, honest.
&lt;/p&gt;</description>
<dc:date>2012-06-21</dc:date>
<guid>http://wordaligned.org/articles/desktop-preferences</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/desktop-preferences</link>
<category>Apple</category>
</item>

<item>
<title>Tell me about &#8230; Virtualization</title>
<description>&lt;div class="toc"&gt;
&lt;h2&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocintroduction" name="toc0" id="toc0"&gt;Introduction&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocvirtualization-in-general" name="toc1" id="toc1"&gt;Virtualization in general&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toccreating-a-virtual-machine" name="toc2" id="toc2"&gt;Creating a virtual machine&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocheres-one-we-made-earlier" name="toc3" id="toc3"&gt;Here&amp;#8217;s one we made earlier&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocrunning-a-virtual-machine" name="toc4" id="toc4"&gt;Running a virtual machine&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocperipheral-access" name="toc5" id="toc5"&gt;Peripheral Access&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocopportunities" name="toc6" id="toc6"&gt;Opportunities&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocconsiderations" name="toc7" id="toc7"&gt;Considerations&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocjust-for-fun" name="toc8" id="toc8"&gt;Just for fun&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocfurther-reading" name="toc9" id="toc9"&gt;Further reading&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocthanks" name="toc10" id="toc10"&gt;Thanks&lt;/a&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc0" name="tocintroduction" id="tocintroduction"&gt;Introduction&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Virtualization solves a computing problem by adding a layer of indirection. The problem being: how to run multiple operating systems on a single computer; and the indirection: to slip a software shim between a guest operating system and the hosting platform, which continues to run its native operating system.
&lt;/p&gt;
&lt;img src="http://wordaligned.org/images/imac-parallels.png" alt="Imac running OS X, Windows XP, Linux"/&gt;

&lt;p&gt;An example makes this clear. I work on an Apple computer which runs OS X, a flavour of BSD Unix. To develop portable code which will build and run on Linux and Windows as well as OS X, I use virtualization software. Using this software enables my Apple computer to run (for example) Windows XP and Linux Fedora Core 7 as guest operating systems alongside its native OS X. Effectively, I have three computers running on the same physical machine with no need for extra power supplies, keyboards, mice, monitors and so on.
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.vmware.com"&gt;&lt;img src="http://wordaligned.org/images/vmware.gif" style="float:right" alt="VMware logo"/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://www.parallels.com/"&gt;Parallels Desktop&lt;/a&gt; virtualization software I use doesn&amp;#8217;t come free but it&amp;#8217;s cheaper and more convenient than buying more hardware. &lt;a href="http://www.vmware.com"&gt;VMware&lt;/a&gt;, perhaps the single biggest name in virtualization, does offer free entry-level products for doing a similar job on Windows and Linux platforms.
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.parallels.com"&gt;&lt;img src="http://wordaligned.org/images/parallels-logo.gif" style="float:right" alt="Parallels logo"/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;This article will not provide details on installing and configuring virtualization software, troubleshooting problems, and so on: the products have matured to the extent that these details are hardly needed, and any problems are quickly answered by online forums. We won&amp;#8217;t attempt to explain how exactly virtualization works. Instead, we&amp;#8217;ll talk more about what virtualization is, how we can use it, and why we should be interested it.
&lt;/p&gt;
&lt;span id="continue-reading"/&gt;


&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc1" name="tocvirtualization-in-general" id="tocvirtualization-in-general"&gt;Virtualization in general&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Before we go further I should explain this article uses the term &amp;#8220;virtualization&amp;#8221; in the specific way described in the introduction. More generally, in computing, virtualization refers to the abstraction in software of the platform on which a program runs. The Java Virtual Machine is a well known example, allowing software developers to build a single executable which should run on any machine. The JVM also isolates the application from the rest of the machine. These advantages, of portability and isolation, also apply to the full  virtualization we&amp;#8217;ll discuss in this article.
&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc2" name="toccreating-a-virtual-machine" id="toccreating-a-virtual-machine"&gt;Creating a virtual machine&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Setting up a virtual machine feels just like setting up a normal machine, except you don&amp;#8217;t need new hardware. All you need is your host machine, the guest operating system media, and a suitable license to use it. With your host up and running, mount the install media, start up the virtualization software, click &amp;#8220;Create new machine&amp;#8221;, and follow the prompts. You&amp;#8217;ll have to specify what resources to grant the machine (disk space, RAM, etc.) but very quickly you&amp;#8217;ll be following the standard install procedure for your guest OS, selecting languages, packages and so on.
&lt;/p&gt;
&lt;p&gt;You don&amp;#8217;t need actual physical media: you can create your virtual machine by booting it up from a DVD image on disk or over a network in much the same way.
&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc3" name="tocheres-one-we-made-earlier" id="tocheres-one-we-made-earlier"&gt;Here&amp;#8217;s one we made earlier&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Actually, you may not require &lt;em&gt;any&lt;/em&gt; install media. Your virtualization software is capable of booting up a pre-built virtual machine. VMware terms such machines &lt;a href="http://www.vmware.com/appliances/"&gt;virtual appliances&lt;/a&gt;. Running such an appliance is as easy as downloading it (which, at around 300Mb or less, requires far less bandwidth than a typical install image) and clicking on the downloaded file.
&lt;/p&gt;
&lt;p&gt;What you&amp;#8217;ll typically be getting is a stripped-down Unix server, pre-built for a specific purpose, with stable, tested, compatible versions of whatever packages it requires for that purpose, and capable of operating within, say, 256Mb of RAM and as much hard disk as you&amp;#8217;re prepared to allow it. You can run this Unix server on a Windows machine. You can reconfigure it. You can even transfer it to a different machine.
&lt;/p&gt;
&lt;p&gt;As an example, suppose you want evaluate &lt;a href="http://trac.edgewall.org"&gt;Trac&lt;/a&gt;, an integrated version control and project management application. Trac may be open-source, popular and free, but I can personally vouch that on a Unix system it takes some setting up, and I can&amp;#8217;t imagine getting it to work natively on a Windows server. Using virtualization, you simply download a virtual machine which has been loaded with the latest stable release of Trac. Boot up this machine using your host virtualisation software and run it on any supported operating system &amp;#8212; Windows included. Do the same with &lt;a href="http://www.redmine.org"&gt;Redmine&lt;/a&gt;, another web-based project management application, and you can compare it with Trac. Once you&amp;#8217;ve completed your evaluation, delete the one you don&amp;#8217;t like and keep going with the other. As a virtual machine, it&amp;#8217;s easy to move it to a new host, if desired. 
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.jumpbox.com"&gt;&lt;img style="float:right" src="http://www.jumpbox.com/sites/all/themes/jumpbox/logo-white.gif" alt="JumpBox logo"/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;VMware provide instructions for creating appliances and host a &lt;a href="http://www.vmware.com/appliances/"&gt;library of such appliances&lt;/a&gt; on their website. Organisations like &lt;a href="http://www.jumpbox.com"&gt;JumpBox&lt;/a&gt; make a business out of providing virtual machines which run on a number of different virtual platforms.
&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc4" name="tocrunning-a-virtual-machine" id="tocrunning-a-virtual-machine"&gt;Running a virtual machine&lt;/a&gt;&lt;/h3&gt;
&lt;img style="float:right" src="http://wordaligned.org/images/win-xp-and-fc7.gif" alt="Virtual machine shortcuts"/&gt;

&lt;p&gt;Parallels Desktop creates shortcuts which I click on to power up the virtual machines. VMware on Windows does something similar. My perception is that these virtual machines boot as quickly as their physical counterparts would, but it could simply be that I&amp;#8217;m using the host system to do something else while they  start up in the background.
&lt;/p&gt;
&lt;p&gt;Exactly how the guest operating system integrates with the host varies. Some systems/configurations give you a window within a window; the guest user interface is displayed as a whole within a single window on the host, and you switch focus to this window to use it. More sophisticated systems integrate seamlessly, so you can tab between host and guest applications as if they were all running natively, and guest and host file browsers see both machines&amp;#8217; file systems transparently. The end-user experience is of the host and guest operating in parallel, as a single computer which can run software native to both systems.
&lt;/p&gt;
&lt;p&gt;In my experience, the first mode can be awkward to use. I much prefer the second: any friction context-switching between machines, and you find yourself preferring separate machines and a KVM, or using an X server to display X windows presented by a remote machine.
&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc5" name="tocperipheral-access" id="tocperipheral-access"&gt;Peripheral Access&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Which peripherals can the guest operating system access? Certainly, the guest wouldn&amp;#8217;t be much use if it couldn&amp;#8217;t make use of monitor, keyboard and mouse &amp;#8212; although you may suffer translation and configuration wrinkles due to the different keyboard layout and mouse button conventions used by different operating systems.
&lt;/p&gt;
&lt;p&gt;Access to other peripherals and interfaces will depend on the virtualization software: check the product information. My guest Windows XP can use its host&amp;#8217;s:
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
     network interfaces
 &lt;/li&gt;

 &lt;li&gt;
     USB ports
 &lt;/li&gt;

 &lt;li&gt;
     DVD drive
 &lt;/li&gt;

 &lt;li&gt;
     speakers
 &lt;/li&gt;

 &lt;li&gt;
     built-in camera
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Actually, I didn&amp;#8217;t realise it could use the camera, having never had cause to use the camera from within Windows, but a quick check shows it can. Access to networked printers also just works.
&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc6" name="tocopportunities" id="tocopportunities"&gt;Opportunities&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;ve already mentioned some obvious uses for virtualization, and I&amp;#8217;ll add some more which I&amp;#8217;ve found useful in the past:
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
     you can develop for multiple platforms using a single machine
 &lt;/li&gt;

 &lt;li&gt;
     you can download pre-built machines designed to run particular applications, saving you from package management headaches
 &lt;/li&gt;

 &lt;li&gt;
     if you use a laptop, virtualization allows you to carry many machines around with you: a sales person could demonstrate Unix-based software on a Windows machine, for example
 &lt;/li&gt;

 &lt;li&gt;
     you can script the creation of machines, and test e.g. clustered server configurations, without needing a rack filled with hardware
 &lt;/li&gt;

 &lt;li&gt;
     you can test on multiple platforms
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Even if your application itself is server-based and only runs on a single platform, virtualization allows you to test its web interface on multiple browsers. And even if your development is tied to a single operating system, virtualization allows you to keep old versions of that operating system alive on new hardware, and indeed to constrain the resources available to these old versions.
&lt;/p&gt;
&lt;p&gt;Hosting companies often use virtualization to create an indirection between user accounts and the hosting hardware farm. Users have root access to their own virtual machine yet are isolated from other root users on the same hardware (for example, rebooting a virtual machine doesn&amp;#8217;t affect other machines on the same host); and their virtual machine can be transferred between physical hosts without them even realising.
&lt;/p&gt;
&lt;p&gt;It would even be possible to distribute software as a virtual appliance. Rather than requiring your users to install version X of Python, version Y of SQLite, version Z of the database bindings and so on, you might consider distributing an entire system which runs as a virtual machine.
&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc7" name="tocconsiderations" id="tocconsiderations"&gt;Considerations&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Running a virtual machine requires real resources. I deliberately chose Windows XP over Vista for this reason; XP has the smaller footprint and it&amp;#8217;s all I personally need for developing software which ports to Windows.
&lt;/p&gt;
&lt;p&gt;As already mentioned, your guest operating system needs licensing. You need to pay to use Windows even if you&amp;#8217;re running it on an Apple computer and have already paid for OS X. You&amp;#8217;ll also need to go through the usual activation procedure.
&lt;/p&gt;
&lt;p&gt;You&amp;#8217;ll need to tend to your virtual machines like any others on your local network. They need naming and backing up. User accounts must be created. Depending on what presence they have on your network, you may want to configure DHCP, or take anti-virus measures. You also need to consider upgrading them.
&lt;/p&gt;
&lt;p&gt;I have run into wrinkles and irritations with the hardware abstraction side of virtualization. For example, the Apple keyboard I use doesn&amp;#8217;t map exactly to what I&amp;#8217;d want when using Windows. It&amp;#8217;s occasionally taken me some fiddling with X configuration files to get a Linux graphical interface displaying properly. Generally, though, someone else will have found and fixed the problem before you, and searching online forums turns up an answer.
&lt;/p&gt;
&lt;p&gt;In this article&amp;#8217;s introduction we classed virtualization as yet another computing problem solved by indirection. Indirection has a price. What about the accumulated expense of everything passing through the software shim which abstracts the platform? Surely a guest operating system can&amp;#8217;t be as fast as a native one on equivalent hardware? I have no hard figures to present here but personal experience suggests no perceptible difference: the only thing I have noticed is that my guest Windows XP seems to use only one of its host&amp;#8217;s two CPUs.
&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc8" name="tocjust-for-fun" id="tocjust-for-fun"&gt;Just for fun&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We&amp;#8217;ve seen it&amp;#8217;s possible and sensible for a platform to host a guest operating system within its native operating system. How about trying something silly? Could our guest operating system itself use virtualization to become a host for a guest of its own?
&lt;/p&gt;
&lt;p&gt;I gave it a go. Using Parallels Desktop on my OS X host, running Windows XP as a guest, I installed (the free) VMware Player virtualization software for Windows. So far, so good. Next I downloaded vmTrac, a 113Mb VMware appliance which packages Trac, Subversion, WebMin and Lighttpd on a FreeBSD core. I extracted the archive and opened the appliance using VMware Player. 
&lt;/p&gt;
&lt;p&gt;The picture shows my desktop. I&amp;#8217;ve used Google Chrome and Internet Explorer to access Trac and WebMin, which are running as web applications on FreeBSD, itself running as a Windows XP guest, and Windows XP is a guest on OS X.
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.flickr.com/photos/thomasguest/2851613748/" title="Virtualization by Thomas Guest, on Flickr"&gt;&lt;img src="http://farm4.static.flickr.com/3011/2851613748_0d3db38a4a.jpg" width="500" height="313" alt="virtualization" /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc9" name="tocfurther-reading" id="tocfurther-reading"&gt;Further reading&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Although virtualization products are mature and modern hardware is ready to accommodate them, the options and possibilities still take some explaining. You&amp;#8217;ll find plenty of good material on the &lt;a href="http://www.vmware.com"&gt;VMware&lt;/a&gt; and &lt;a href="http://www.parallels.com/"&gt;Parallels&lt;/a&gt; websites. It&amp;#8217;s also worth searching for other virtualization platforms. This is a growing market, there are lots of competitors and good deals to be had.
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.justsoftwaresolutions.co.uk/testing/testing-on-multiple-platforms-with-vmware.html"&gt;Testing on Multiple Platforms with VMware&lt;/a&gt;, by Anthony Williams provides a clear overview of the subject addressed in this article.
&lt;/p&gt;
&lt;hr /&gt;


&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc10" name="tocthanks" id="tocthanks"&gt;Thanks&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://accu.org/index.php/aboutus/aboutjournals"&gt;&lt;img style="float:right;" src="http://accu.org/content/images/journals/CVu205Cover.png" alt="CVu 20.5 cover"/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;This article was first published in CVu 20.5, an &lt;a href="http://accu.org/index.php/aboutus/aboutjournals"&gt;ACCU journal&lt;/a&gt;, and I would like to thank everyone at CVu for their help with it. In particular, I&amp;#8217;d like to thank Gail Ollis, who edited CVu 20.5, and who suggested contributors should try and step back from the details of &lt;strong&gt;how&lt;/strong&gt; to do something, and instead explain &lt;strong&gt;what&lt;/strong&gt; exactly that something is and &lt;strong&gt;why&lt;/strong&gt; it might be of interest.
&lt;/p&gt;
&lt;p&gt;This remit inspired several authors and CVu 20.5 turned out to be a great read. I particularly enjoyed Matthew Wilson&amp;#8217;s article, &amp;#8220;!(C ^ C++)&amp;#8221;. &lt;a href="http://en.wikipedia.org/wiki/Matthew_Wilson_(author)"&gt;Matthew Wilson&lt;/a&gt; is known as a C++ expert, but it came as no surprise to find he also knows his way around C. What did surprise me was to discover he prefers to use C in certain situations, and why.
&lt;/p&gt;</description>
<dc:date>2009-01-07</dc:date>
<guid>http://wordaligned.org/articles/virtualization</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/virtualization</link>
<category>Apple</category>
</item>

<item>
<title>iBlame Exchange</title>
<description>&lt;p&gt;&lt;a href="http://www.carling.com/ipint_details.html"&gt;&lt;img style="float:right;" src="http://wordaligned.org/images/ipint.jpg" alt="iPint"/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;After a virtual wait outside the istore my boss&amp;#8217;s iphone 2.0 arrived. Having unboxed and activated it, he handed his obsolete iphone 1.0 on to one of his sons, who, flouting the warning:
&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;You must be at least 17 years old to download this game
&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;downloaded &lt;a href="http://www.carling.com/ipint_details.html"&gt;ipint&lt;/a&gt;, an advert/game which uses the iphone&amp;#8217;s on board &lt;a href="http://www.youtube.com/watch?v=Wtcys_XFnRA"&gt;accelerometer&lt;/a&gt; to slosh beer around. 
&lt;/p&gt;
&lt;p&gt;This new iphone 2.0 is a company phone and other lucky company phone users where I work have switched to iphones. The must-have feature which precipitated this decision was &lt;em&gt;not&lt;/em&gt; the sleek design, the clever interface, nor even the amusing accelerometer, but rather the more utilitarian microsoft exchange email integration &amp;#8212; a feature my boss tried out on holiday in the Alps. Some bug in the system (or, more probably, in the integration of various systems) caused &lt;code&gt;everyone@where-i-work.com&lt;/code&gt; to get spammed with ten copies of the same photograph.
&lt;/p&gt;
&lt;p&gt;&lt;img src="http://wordaligned.org/images/matterhorn-mini.jpg" alt="[mini Matterhorn]" style="align:top;"/&gt;&lt;img src="http://wordaligned.org/images/matterhorn-mini.jpg" alt="[mini Matterhorn]" style="align:top;"/&gt;&lt;img src="http://wordaligned.org/images/matterhorn-mini.jpg" alt="[mini Matterhorn]" style="align:top;"/&gt;&lt;img src="http://wordaligned.org/images/matterhorn-mini.jpg" alt="[mini Matterhorn]" style="align:top;"/&gt;&lt;img src="http://wordaligned.org/images/matterhorn-mini.jpg" alt="[mini Matterhorn]" style="align:top;"/&gt;&lt;img src="http://wordaligned.org/images/matterhorn-mini.jpg" alt="[mini Matterhorn]" style="align:top;"/&gt;&lt;img src="http://wordaligned.org/images/matterhorn-mini.jpg" alt="[mini Matterhorn]" style="align:top;"/&gt;&lt;img src="http://wordaligned.org/images/matterhorn-mini.jpg" alt="[mini Matterhorn]" style="align:top;"/&gt;&lt;img src="http://wordaligned.org/images/matterhorn-mini.jpg" alt="[mini Matterhorn]" style="align:top;"/&gt;&lt;img src="http://wordaligned.org/images/matterhorn-mini.jpg" alt="[mini Matterhorn]" style="align:top;"/&gt;
&lt;/p&gt;</description>
<dc:date>2008-08-07</dc:date>
<guid>http://wordaligned.org/articles/iblame-exchange</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/iblame-exchange</link>
<category>Apple</category>
</item>

<item>
<title>Attack of the Alien Asterisks</title>
<description>&lt;img src="http://wordaligned.org/files/asterisk-invasion.png" alt="Attack of the alien asterisks picture"/&gt;

&lt;span id="continue-reading"/&gt;


&lt;h3&gt;Cross Platform Hassles&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;ve been spending an increasing amount of time working on Windows recently, using a virtual XP installation running on an Apple iMac. I&amp;#8217;ve had some trouble with &lt;a href="http://wordaligned.org/articles/from-hash-key-to-haskell.html"&gt;key-mappings&lt;/a&gt; but by now my fingers have adjusted: the Apple Key is the Windows key, the ALT key is the META key, the &lt;a href="http://wordaligned.org/articles/from-hash-key-to-haskell.html"&gt;HASH key is AWOL&lt;/a&gt;. It&amp;#8217;s tolerable, especially given my limited enthusiasm for re-configuring.
&lt;/p&gt;
&lt;p&gt;Surprisingly, I suffer more with the font rendering discrepancies. Or perhaps it&amp;#8217;s not so surprising: I write software which, at its most basic, involves shuffling characters around using a text editor until they look right.
&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m not that fussy. Apple is rightly praised for its fonts and rendering but Windows does fine in this area too. What I dislike is having the two styles side by side.
&lt;/p&gt;

&lt;h3&gt;Side by Side&lt;/h3&gt;
&lt;p&gt;Here&amp;#8217;s what I mean. On the Mac, the code snippet looks full-bodied and smooth.
&lt;/p&gt;
&lt;img src="http://wordaligned.org/files/ft-snippet-osx.png" alt="Mac code graphic"/&gt;

&lt;p&gt;On Windows XP, the same code looks a bit scratchy.
&lt;/p&gt;
&lt;img src="http://wordaligned.org/files/ft-snippet-xp.png" alt="Windows XP code graphic"/&gt;

&lt;p&gt;Maybe &lt;a href="http://www.codinghorror.com/blog/archives/000884.html" title="Jeff Atwood asks What's wrong with Apple's Font Rendering"&gt;you prefer the Windows rendering&lt;/a&gt;; maybe you wouldn&amp;#8217;t just go with the default &lt;a href="http://www.codinghorror.com/blog/archives/000969.html" title="Jeff Atwood revisits programming fonts"&gt;fixed-width font&lt;/a&gt; (Monaco on OS X, Courier New on XP). I suspect it boils down to what you&amp;#8217;re used to, which is really the point I&amp;#8217;m trying to make: the two approaches to font-rendering don&amp;#8217;t coexist comfortably. I wanted them to look more similar.
&lt;/p&gt;

&lt;h3&gt;Clear Type&lt;/h3&gt;
&lt;p&gt;Clearly getting the OS X text rendering to look Window-sy was a non-starter. So I poked around in the XP display properties.
&lt;/p&gt;
&lt;p&gt;Display Properties &amp;rarr; Appearance &amp;rarr; Effects&amp;#8230; 
&lt;/p&gt;
&lt;p&gt;I then checked the &lt;a href="http://en.wikipedia.org/wiki/ClearType"&gt;ClearType&lt;/a&gt; option to &amp;#8220;smooth the edges of screen fonts&amp;#8221;, and this is what I got.
&lt;/p&gt;
&lt;img src="http://wordaligned.org/files/ft-snippet-cleartype.png" alt="Windows XP code graphic"/&gt;

&lt;p&gt;An improvement, I think, and certainly closer to the Apple rendering. (Apparently &lt;a href="http://en.wikipedia.org/wiki/ClearType"&gt;ClearType&lt;/a&gt; is on by default for Windows Vista, and I recognise it from recent versions Internet Explorer.)
&lt;/p&gt;
&lt;p&gt;The asterisks look a bit odd though. Here&amp;#8217;s a close up of a field/flock/fleet of them.
&lt;/p&gt;
&lt;img src="http://wordaligned.org/files/asterisk-invasion.png" alt="Attack of the alien asterisks picture"/&gt;

&lt;p&gt;Scary!
&lt;/p&gt;</description>
<dc:date>2008-01-31</dc:date>
<guid>http://wordaligned.org/articles/attack-of-the-alien-asterisks</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/attack-of-the-alien-asterisks</link>
<category>Apple</category>
</item>

<item>
<title>From Hash Key to Haskell</title>
<description>&lt;h3&gt;Mac Hash&lt;/h3&gt;
&lt;p&gt;How annoying, there&amp;#8217;s no hash key on the Mac UK keyboard!
&lt;/p&gt;
&lt;p&gt;SHIFT+3 gets you the UK pound sign, &amp;pound; (I&amp;#8217;d prefer the Euro, &amp;euro;), and once you&amp;#8217;ve found that you&amp;#8217;re in the right vicinity &amp;#8212; as if by magic, ALT+3 produces the #.
&lt;/p&gt;
&lt;p&gt;Unfortunately this same key combination doesn&amp;#8217;t work on the Windows XP virtual machine I run under &lt;a href="http://www.parallels.com/en/products/desktop/"&gt;Parallels&lt;/a&gt;. I&amp;#8217;ve done enough configuring to get the Mac keyboard working tolerably with this virtualised XP, but whenever I need to enter a # I&amp;#8217;m reduced to cutting and pasting.
&lt;/p&gt;

&lt;h3&gt;Trigraph Confusion&lt;/h3&gt;
&lt;p&gt;C and C++ programmers could avoid the # by using trigraphs, an obscure language feature which allows you to write &lt;code&gt;??=&lt;/code&gt; instead. Yes, there are other trigraphs. Courtesy of Wikipedia, here&amp;#8217;s an &lt;a href="http://en.wikipedia.org/wiki/C_trigraph#Example"&gt;example program&lt;/a&gt; which uses them all.
&lt;/p&gt;
&lt;blockquote&gt;&lt;pre&gt;
??=include &amp;lt;stdio.h&amp;gt;

int main(void)
??&amp;lt;
    char n??(5??);
    n??(4??) = '0' - (??-0 ??' 1 ??! 2);
    printf("%c??/n", n??(4??));
    return 0;
??&amp;gt;
&lt;/pre&gt;&lt;/blockquote&gt;

&lt;p&gt;Impressively unreadable!
&lt;/p&gt;

&lt;h3&gt;What you see is not what you type&lt;/h3&gt;
&lt;p&gt;An important difference between a typewriter and a text editor is the software between keypress and screen update &amp;#8212; the software I&amp;#8217;ve failed to fully configure on my virtual XP machine. So why not exploit this indirection?
&lt;/p&gt;
&lt;p&gt;Developers of mobile phones have grown ingenious at adapting a numeric keypad to generate text almost as ably as a QWERTY one. (Which do serious texters prefer, I wonder, an &lt;a href="http://www.apple.com/iphone/"&gt;iphone&lt;/a&gt; or a numeric keypad?) And my &lt;a href="http://www.adiumx.com/"&gt;instant messenger client&lt;/a&gt; is cute enough to display smiley punctuation sequences as emoticon graphics.
&lt;/p&gt;

&lt;h3&gt;Python smiley&lt;/h3&gt;
&lt;p&gt;On which point, &lt;span /&gt;has anyone else noticed the square-jawed smiley you get when you chop the last element from a Python list? This one&amp;#8217;s wearing a cap.
&lt;/p&gt;
&lt;pre style="font-size: 150%"&gt;q[:-1]&lt;/pre&gt;


&lt;h3&gt;Readable Haskell&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.haskell.org"&gt;Haskell&lt;/a&gt; is one of my &lt;a href="http://www.codinghorror.com/blog/archives/000916.html" title="Jeff Attwood cautions against the magpie mentality."&gt;shiny new things&lt;/a&gt; for 2008. I&amp;#8217;ve scratched at it before and one of the things which put me off is the number of digraphs in the code. They don&amp;#8217;t look right. I&amp;#8217;m talking about the arrows in particular:
&lt;/p&gt;
&lt;pre style="font-size: 150%"&gt;-&amp;gt;  &amp;lt;-  =&amp;gt;&lt;/pre&gt;

&lt;p&gt;Of course I&amp;#8217;m used to the logical digraphs &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;||&lt;/code&gt; and the comparison operators, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt; etc. These don&amp;#8217;t look out of place in the C family of languages, but Haskell&amp;#8217;s roots seem closer to mathematics and logic; it &lt;em&gt;craves&lt;/em&gt; proper mathematical and logical symbols.
&lt;/p&gt;
&lt;img style="float:right;" src="http://haskell.org/haskellwiki_logo_small.png" alt="Haskell Logo"/&gt;

&lt;p&gt;The symbol Haskell uses for anonymous functions is a single backslash, &lt;code&gt;\&lt;/code&gt;. This should of course be a lambda, &amp;#x03BB;. It&amp;#8217;s ironic that this character is the star of the &lt;a href="http://www.haskell.org"&gt;Haskell homepage&lt;/a&gt; but can&amp;#8217;t be found in Haskell source code.
&lt;/p&gt;
&lt;p&gt;It shouldn&amp;#8217;t be too hard to view and edit Haskell code using more appropriate characters even if you actually input them as usual. Oh look, &lt;a href="http://www.iro.umontreal.ca/~monnier/elisp/#haskell-mode"&gt;Emacs does it already&lt;/a&gt;!
&lt;/p&gt;
&lt;p&gt;Set &lt;code&gt;(setq haskell-font-lock-symbols 'unicode)&lt;/code&gt; and your Haskell code will look something like the sample shown in the upper screen below (I&amp;#8217;ve split the editor window and shown a plain-text view of the same content in the lower screen).
&lt;/p&gt;
&lt;img src="http://wordaligned.org/files/haskell-emacs-screen.png" alt="Emacs Haskell mode screen grab"/&gt;

&lt;p&gt;Much better!
&lt;/p&gt;</description>
<dc:date>2008-01-19</dc:date>
<guid>http://wordaligned.org/articles/from-hash-key-to-haskell</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/from-hash-key-to-haskell</link>
<category>Apple</category>
</item>

<item>
<title>A tale of two upgrades</title>
<description>&lt;p&gt;This week I upgraded my &lt;a href="http://www.google.com/ig"&gt;google personal homepage&lt;/a&gt; and I upgraded
   some software on my PC &amp;#8212; and the two processes couldn&amp;#8217;t have been
   more different. This post describes my experience. It goes on to
   discuss the two different models of supplying and upgrading software
   from both a user&amp;#8217;s and a software provider&amp;#8217;s perspective.
&lt;/p&gt;
&lt;span id="continue-reading"/&gt;


&lt;h3&gt;Google homepage upgrade&lt;/h3&gt;
&lt;p&gt;The &lt;a href="http://www.google.com/ig"&gt;google homepage&lt;/a&gt; upgrade was painless. It just happened when I
   visited the site. Actually it upgraded me and I&amp;#8217;m probably being
   upgraded all the time, it&amp;#8217;s just that I don&amp;#8217;t usually notice: this
   time, they&amp;#8217;d introduced another folding widget
   &lt;img src="http://www.google.co.uk/ig/images/zippy_minus_sm.gif" alt="Close widget"/&gt;
   &lt;img src="http://www.google.co.uk/ig/images/zippy_plus_sm.gif" alt="Open widget"/&gt;,
   allowing me to preview a syndicated article
   without having to leave the page.
&lt;/p&gt;
&lt;p&gt;Incidentally, I don&amp;#8217;t even know what version of google homepage I&amp;#8217;m
   using.  And I don&amp;#8217;t really care. If it&amp;#8217;s like most google software,
   it&amp;#8217;s probably labelled as &amp;#8220;beta&amp;#8221; &amp;#8212; despite being rock solid.
   Whatever version it is, I don&amp;#8217;t have any choice in the matter. I get
   what they give me.
&lt;/p&gt;

&lt;h3&gt;PC software upgrade&lt;/h3&gt;
&lt;p&gt;The PC software upgrade was less straightforward. As soon as I&amp;#8217;d
   booted up my PC, a host of upgrade agents started distracting me
   &amp;#8212; it wasn&amp;#8217;t really how I wanted to start my working day, but I&amp;#8217;ve
   learned that if you try and click away these agents, they&amp;#8217;ll only come
   back and trouble you later at a similarly inconvenient time. The only
   way to silence them is to obey. Here&amp;#8217;s what the first friendly
   instruction dialog advised:
&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;This update is for MacBook computers with Intel processors only.
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: Print or write down these instructions before you begin the update.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;To update the firmware on your Intel-based MacBook:
&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;&lt;p&gt;Quit all other open applications.
&lt;/p&gt;

 &lt;/li&gt;

 &lt;li&gt;&lt;p&gt;Click Shut Down in the MacBook EFI Firmware Update window and wait for your computer to shut down.
&lt;/p&gt;

 &lt;/li&gt;

 &lt;li&gt;&lt;p&gt;Press and hold the power button on your MacBook until the power indicator light flashes repeatedly to begin the update.
&lt;/p&gt;

 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;   A status bar indicates the progress of the update.
      &lt;strong&gt;Important: Do not interrupt the update.&lt;/strong&gt;
      Your computer restarts automatically when the update is completed and opens the MacBook EFI Firmware Update.
&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;
     Click OK, if the firmware is now up-to-date.
 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If these instructions appear on your screen again, the firmware update
   was not successful. Repeat steps 2, 3 and 4.
&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;These are simple enough instructions, but they certainly didn&amp;#8217;t make
   me feel comfortable. They carry a strong hint that something might go
   wrong:
&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;There&amp;#8217;s only one thing for it. You&amp;#8217;ll need to send your computer
   into a coma then prod it until it revives. It&amp;#8217;s risky but it&amp;#8217;s the
   only way.
&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;Consider the poor user who doesn&amp;#8217;t know what processor they&amp;#8217;re
   running, or what a processor is, or what firmware means?  The
   instructions didn&amp;#8217;t pop up in a document with a print button, so even
   obeying the first note about printing them out needed thought &amp;#8212;
   fortunately I had access to another PC so I just emailled them to
   myself.
&lt;/p&gt;
&lt;p&gt;Once I&amp;#8217;d upgraded the firmware &amp;#8212; phew!, it worked &amp;#8212; I dealt with the
   other software upgrades. They too required me to restart my PC. They
   weren&amp;#8217;t for software I use much.
&lt;/p&gt;
&lt;p&gt;If it looks like I&amp;#8217;m quickly taking back everything
   &lt;a href="http://wordaligned.org/articles/happy-mac.html"&gt;I said about Macs&lt;/a&gt;
   a couple of weeks back, I&amp;#8217;m not. Upgrade agents on a Windows PC
   are even more annoying; but what&amp;#8217;s far worse is protecting yourself
   against unwanted software &amp;#8220;upgrades&amp;#8221; (viruses, spyware, etc.). And the
   variety of different package management systems on various Linux
   distributions indicates that they too haven&amp;#8217;t solved the problem,
   though at least the user typically pulls the upgrade rather than have
   the computer push it at them.
&lt;/p&gt;

&lt;h4&gt;Conclusions: User&amp;#8217;s Perspective&lt;/h4&gt;
&lt;p&gt;It&amp;#8217;s a little glib to suggest that providing software as a service,
   rather than as a desktop application, solves the upgrade problem.  For
   a start, not all software is suited to being run remotely &amp;#8212; though as
   bandwidths increase and browser capabilities improve, more and more
   will fall into this category.
&lt;/p&gt;
&lt;p&gt;From a user&amp;#8217;s point of view, as I&amp;#8217;ve already pointed out, using a
   remotely hosted software service may seem like a loss of control: What&amp;#8217;s to
   stop google reading my emails?  What guarantees they won&amp;#8217;t
   carelessly delete my calendar appointments?  Will they suddenly
   revoke a service I&amp;#8217;ve come depend on? Or will they simply auto-upgrade
   me to a version I don&amp;#8217;t like?
&lt;/p&gt;
&lt;p&gt;&lt;span /&gt;When we think more carefully, though, we realise these fears are
   misplaced and often apply equally to desktop software. A poor quality
   desktop application can shred your data, and you&amp;#8217;re also vulnerable to
   hardware failures, viruses and burglars. I&amp;#8217;m willing to bet google&amp;#8217;s
   backup regime is more rigorous than most domestic ones. Regarding
   upgrades: you often get trapped in an upgrade dependency cycle on a PC
   &amp;#8212; this package depends on that package, which requires the latest
   version of another package, and you suddenly find you&amp;#8217;re running
   bleeding edge software when all you wanted was a bugfix to something
   which basically worked. And in an age when most computers are
   permanently hooked to the internet, even the privacy argument weakens.
&lt;/p&gt;

&lt;h4&gt;Conclusions: Provider&amp;#8217;s Perspective&lt;/h4&gt;
&lt;p&gt;Things are tough for the software provider too. If you decide to host
   your software as a web-based service, there are &lt;a href="http://www.paulgraham.com/road.html"&gt;advantages&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
     you retain full control over the version of software you deploy (and which, therefore, your users use)
 &lt;/li&gt;

 &lt;li&gt;
     you&amp;#8217;re directly connected to your customers; you can monitor use patterns and improve your application accordingly
 &lt;/li&gt;

 &lt;li&gt;
     you don&amp;#8217;t need to port to a platform you don&amp;#8217;t like
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With these advantages come responsibilities. You control your users&amp;#8217;
   data, and it&amp;#8217;s your responsibility to make sure it&amp;#8217;s secure and that
   their privacy is protected. You&amp;#8217;d better be capable of hosting the
   service, 24 hours a day, 7 days a week, 52 weeks a year; and you&amp;#8217;ll
   need to be capable of scaling up if necessary &amp;#8212; you can&amp;#8217;t increase
   your user-base by printing more CDs.
&lt;/p&gt;
&lt;p&gt;If, instead, you decide to deliver a desktop application, you need to
   worry about which platforms you&amp;#8217;ll support. Saying you support
   Windows, for example, isn&amp;#8217;t really good enough &amp;#8212; you need to consider
   the various permutations of versions and service packs, and how you&amp;#8217;ll
   test them, and how long you&amp;#8217;ll go on supporting them. And you have to
   think about how customers can upgrade between versions of your
   software &amp;#8212; a problem which I&amp;#8217;ll discuss in another post.
&lt;/p&gt;</description>
<dc:date>2007-01-27</dc:date>
<guid>http://wordaligned.org/articles/a-tale-of-two-upgrades</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/a-tale-of-two-upgrades</link>
<category>Apple</category>
</item>

<item>
<title>Happy Mac</title>
<description>&lt;p&gt;Did I mention that I&amp;#8217;m a happy &lt;a href="http://www.apple.com/hardware/"&gt;mac&lt;/a&gt; user now? It would be rather
   hard to work where I do without using an &lt;a href="http://www.apple.com/"&gt;apple&lt;/a&gt; computer &amp;#8212; &lt;span /&gt;my boss
   is a mac evangelist, keen to convert those lost souls who continue
   to suffer other platforms
   &lt;a href="http://wordaligned.org/articles/happy-mac#why_do_management_like_microsoft"&gt;[1]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;The funny thing is, I don&amp;#8217;t really spend time enjoying the legendary
   &lt;a href="http://www.apple.com/hardware/"&gt;mac&lt;/a&gt; user interface: I live inside &lt;a href="http://www.gnu.org/software/emacs"&gt;emacs&lt;/a&gt;, and about the only
   graphics rich gui I tolerate is &lt;a href="http://www.mozilla.com"&gt;firefox&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;Nonetheless, the computers (I use both an &lt;a href="http://www.apple.com/imac/"&gt;imac&lt;/a&gt; and a &lt;a href="http://www.apple.com/macbook/macbook.html"&gt;macbook&lt;/a&gt;)
   are delightful. They look and sound fabulous. When one goes to sleep
   its white led pulses softly &amp;#8212; you&amp;#8217;d almost swear it was
   breathing. Installing software is simple. Fonts are
   beautiful. Upgrades are painless. As a software development platform,
   it&amp;#8217;s fully powered by Unix, which is to say, it&amp;#8217;s fully
   powered. Everything you&amp;#8217;re likely to want comes as standard: a camera,
   bluetooth, wireless, firewire. I could go on &amp;#8230;
&lt;/p&gt;
&lt;p&gt;So I can understand the fuss about the &lt;a href="http://www.apple.com/iphone/"&gt;iphone&lt;/a&gt;. As it happens, I
   received my first mobile phone this Christmas. It was a present from
   Gail, who&amp;#8217;d become frustrated by not being able to contact me. I
   confess, I didn&amp;#8217;t really want one. Another thing to carry around,
   another thing to interrupt me &amp;#8212; but now I have one, I quite like it.
&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s not a &lt;a href="http://nokia.com/"&gt;nokia&lt;/a&gt; or a &lt;a href="http://samsung"&gt;samsung&lt;/a&gt;:
   it&amp;#8217;s a fairly basic
   &lt;a href="http://www.sagem.com/mobiles/mobile/niveau3/index_niveau3.php?modeleType=mob30#"&gt;sagem&lt;/a&gt;,
   and I&amp;#8217;ve been pleasantly surprised how well it works. It seems
   that, given constraints &amp;#8212; in this case, a limited input device and a tiny
   display &amp;#8212; software developers often do a better job.
&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;a id="why_do_management_like_microsoft"&gt;[1]&lt;/a&gt;
   I realise that software development and management are two very
   different disciplines, but I can&amp;#8217;t understand why so many managers insist on
   choosing Microsoft &amp;#8220;solutions&amp;#8221;, especially ones which are over-priced,
   limited to a single platform, and which cause more problems than they
   solve.
&lt;/p&gt;</description>
<dc:date>2007-01-13</dc:date>
<guid>http://wordaligned.org/articles/happy-mac</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/happy-mac</link>
<category>Apple</category>
</item>

</channel>
</rss>
