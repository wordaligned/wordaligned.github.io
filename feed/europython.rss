<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" >
<channel>
<title>Word Aligned</title>
<link>https://wordaligned.org</link>
<description>tales from the code face</description>
<dc:creator>tag@wordaligned.org</dc:creator>
<language>en-gb</language>
<item>
<title>Undogfooding</title>
<description>&lt;p&gt;David Jones perfectly &lt;a href=&quot;http://drj11.wordpress.com/2009/07/04/tony-hoare-man-of-science/&quot;&gt;captures the look and feel&lt;/a&gt; of Sir Tony Hoare&amp;#8217;s presentation at &lt;a href=&quot;http://www.europython.eu&quot;&gt;Europython 2009&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tony Hoare is clearly old skool. His slides had the calm and aged patina of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Overhead_projector&quot;&gt;OHP&lt;/a&gt; era, and I thought they were all the better for that. If you have a message, then that message can be conveyed without all the flash and shine that PowerPoint tempts you with (although, being a Microsoft man, of course his slides &lt;em&gt;were&lt;/em&gt; in PowerPoint). &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://docs.python.org/library/turtle.html#module-turtle&quot;&gt;&lt;img src=&quot;https://wordaligned.org/images/my-1st-turtle.png&quot; alt=&quot;My first turtle sketch&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note the parenthetical comment: Tony Hoare works for Microsoft and he uses Microsoft software, an activity developers refer to as &lt;a href=&quot;http://catb.org/jargon/html/D/dogfood.html&quot;&gt;&amp;#8220;eating your own dogfood&amp;#8221;&lt;/a&gt;. Also eating dogfood at Europython, &lt;a href=&quot;http://www.europython.eu/talks/speakers/index.html#lingl_gregor&quot;&gt;Gregor Lingl&lt;/a&gt; employed his very own &lt;a href=&quot;http://docs.python.org/library/turtle.html#module-turtle&quot;&gt;turtle&lt;/a&gt; to guide the audience through a nifty presentation belying the reptile&amp;#8217;s slow-and-steady reputation. I&amp;#8217;ve always enjoyed sketching code using the Python interpreter, and sketching pictures with a turtle feels very pythonic.&lt;/p&gt;
&lt;div class=&quot;typocode&quot;&gt;&lt;div class=&quot;codetitle&quot;&gt;My first turtle sketch&lt;/div&gt;

&lt;pre class=&quot;prettyprint&quot;&gt;Python 3.1
&amp;gt;&amp;gt;&amp;gt; from turtle import *
&amp;gt;&amp;gt;&amp;gt; shape(&amp;#x27;turtle&amp;#x27;)
&amp;gt;&amp;gt;&amp;gt; circle(100)
&amp;gt;&amp;gt;&amp;gt; fillcolour(&amp;#x27;red&amp;#x27;)
Traceback (most recent call last):
  File &quot;&amp;lt;stdin&amp;gt;&quot;, line 1, in &amp;lt;module&amp;gt;
NameError: name &amp;#x27;fillcolour&amp;#x27; is not defined
&amp;gt;&amp;gt;&amp;gt; fillcolor(&amp;#x27;red&amp;#x27;)
&amp;gt;&amp;gt;&amp;gt; begin_fill(); circle(100); end_fill()
&amp;gt;&amp;gt;&amp;gt; def grey(pc): c = pc/100; fillcolor(c, c, c)
... 
&amp;gt;&amp;gt;&amp;gt; clear()
&amp;gt;&amp;gt;&amp;gt; def doit(r): begin_fill(); grey(r); circle(r); end_fill()
... 
&amp;gt;&amp;gt;&amp;gt; for r in range(100): doit(r)
... 
^C^C
Traceback (most recent call last):
...
&amp;gt;&amp;gt;&amp;gt; clear()
&amp;gt;&amp;gt;&amp;gt; for r in range(100, 0, -5): doit(r)
...
&amp;gt;&amp;gt;&amp;gt; fillcolor(&amp;#x27;white&amp;#x27;)
&amp;gt;&amp;gt;&amp;gt; forward(150)

&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Gregor Lingl&amp;#8217;s session at Europython wasn&amp;#8217;t the only one delivered using software developed by the presenter. What would be the opposite of eating your own dogfood, I wondered? Abusing someone else&amp;#8217;s software, perhaps.&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;continue-reading&quot;/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;After one too many bad presentations at a meeting in January 2000, I decided to see if I could do something about it. &amp;#8212; &lt;a href=&quot;http://norvig.com/Gettysburg/making.html&quot; title=&quot;The Making of the Gettysburg PowerPoint Presentation&quot;&gt;Peter Norvig&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I&amp;#8217;m fairly sure Peter Norvig had no part in PowerPoint&amp;#8217;s development. In a &lt;a href=&quot;http://norvig.com/Gettysburg&quot;&gt;hilarious satire&lt;/a&gt; he skewers the popular presentation tool with its own Autocontent Wizard.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://norvig.com/Gettysburg/index.htm&quot;&gt;&lt;img src=&quot;http://norvig.com/Gettysburg/img001.gif&quot; width=&quot;500px&quot; height=&quot;375px&quot; alt=&quot;Gettysburg PPT, slide 1&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Back on the subject of overhead projectors, I saw one put to good use by another eminent old-skooler, Donald Knuth, at the recent &lt;a href=&quot;http://www.dcs.warwick.ac.uk/bshm/meetings/Fiction.html&quot;&gt;Mathematics and Fiction&lt;/a&gt; workshop in Oxford. Asked by passport control at London Heathrow if he&amp;#8217;d be visiting Oxford on a business trip or a pleasure trip, Knuth had answered: no, he&amp;#8217;d come on a ego trip.&lt;/p&gt;
&lt;p&gt;Knuth was in Oxford to talk to his fans about about &lt;a href=&quot;http://www-cs-faculty.stanford.edu/~knuth/sn.html&quot;&gt;Surreal Numbers&lt;/a&gt;, a       book he wrote in just a couple of weeks in 1973 while taking a break from working on &lt;a href=&quot;http://en.wikipedia.org/wiki/The_Art_of_Computer_Programming&quot;&gt;The Art of Computer Programming&lt;/a&gt; in a hotel in Oslo, and which may well be the only example of a mathematical &lt;a href=&quot;http://en.wikipedia.org/wiki/Surreal_numbers&quot;&gt;theory&lt;/a&gt; first published in fictional form.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www-cs-faculty.stanford.edu/~knuth/sn.html&quot;&gt;&lt;img src=&quot;https://wordaligned.org/images/books/surreal-numbers.jpg&quot; width=&quot;240px&quot; height=&quot;240px&quot; alt=&quot;Surreal Numbers book cover&quot; style=&quot;float:right;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For the workshop Knuth had gone back to his files and found his working notes, the original hotel brochure, photos, hand-written reviews by P&amp;oacute;lya and others, though he couldn&amp;#8217;t locate the paper napkin on which &lt;a href=&quot;http://en.wikipedia.org/wiki/John_Horton_Conway&quot;&gt;John Horton Conway&lt;/a&gt; had sketched the axioms underpinning the number system a few months before&lt;a id=&quot;fn1link&quot; href=&quot;https://wordaligned.org/articles/undogfooding#fn1&quot;&gt;&lt;sup&gt;&lt;a href=&quot;https://blog.codeship.com/building-minimal-docker-containers-for-go-applications/&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/a&gt; &amp;#8212; Knuth had copied this source material onto acetates which he then sorted and shuffled on the OHP according to the direction his reminiscences and questions from the audience took him.&lt;/p&gt;
&lt;p&gt;Unlike Tony Hoare, Donald Knuth wasn&amp;#8217;t making a formal presentation, but I was struck by some advantages offered by the OHP. For one, the process of getting slides displayed seemed foolproof &amp;#8212; at Europython we had the usual catalogue of computer/screen interface glitches (unwanted dialog boxes popping up, batteries dying, screensavers kicking in, missing Mac display dongles, delays while rebooting Ubuntu, alignment issues). The OHP also facilitated a dynamic presentation style: Knuth accessed his slides at random, composing screens from more than one slide on the fly, and pointing to areas of interest directly using a finger. He didn&amp;#8217;t modify his slides during the session by writing on them, but that would also have been possible.&lt;/p&gt;
&lt;p&gt;In a supreme example of dogfood consumption, a couple of years after publishing Surreal Numbers Knuth took a rather longer break from TAOCP to work on &lt;a href=&quot;http://en.wikipedia.org/wiki/TeX&quot;&gt;TeX&lt;/a&gt;, a typesetting system whose results match the beauty of his writing.&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&amp;sect;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;#8230; You get surreal numbers by playing games. I used to feel guilty in Cambridge that I spent all day playing games, while I was supposed to be doing mathematics. Then, when I discovered surreal numbers, I realized that playing games IS mathematics. &amp;#8212; &lt;a href=&quot;http://www.gap-system.org/~history/Quotations/Conway.html&quot;&gt;John Horton Conway&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a id=&quot;fn1&quot; href=&quot;https://wordaligned.org/articles/undogfooding#fn1link&quot;&gt;&lt;a href=&quot;https://blog.codeship.com/building-minimal-docker-containers-for-go-applications/&quot;&gt;1&lt;/a&gt;&lt;/a&gt; In fact, he&amp;#8217;d lost the napkin before his stay in the hotel in Oslo, which explains the difference between the axioms used in Surreal Numbers and the ones originally suggested by John Horton Conway.&lt;/p&gt;</description>
<dc:date>2009-07-08</dc:date>
<guid>https://wordaligned.org/articles/undogfooding</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>https://wordaligned.org/articles/undogfooding</link>
<category>Europython</category>
</item>

<item>
<title>Tony Hoare&#8217;s vision, car crashes, and Alan Turing</title>
<description>&lt;p&gt;&lt;a href=&quot;http://www.europython.eu&quot;&gt;&lt;img src=&quot;http://www.europython.eu/images/europython_logo.png&quot; alt=&quot;Europython Logo&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yesterday afternoon, at &lt;a href=&quot;http://www.europython.eu&quot;&gt;Europython 2009&lt;/a&gt;, David Jones addressed the subject &lt;a href=&quot;http://www.europython.eu/talks/talk_abstracts/index.html#talk21&quot;&gt;&amp;#8220;What sucks about Python?&amp;#8221;&lt;/a&gt; Despite this provocative title, David Jones had lots of good things to say about Python, and the two topics which really roused the audience (the global interpreter lock and the over-crowded Python packaging space) had more to do with the Python-the-platform than Python-the-language. He also failed to mention the thing I miss most when working with Python: via Peter Norvig&amp;#8217;s &lt;a href=&quot;http://norvig.com/python-iaq.html&quot;&gt;Python IAQ&lt;/a&gt;, quoting Bjarne Stroustrup:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#8220;If I were to design a language from scratch, I would follow the Algol68 path and make every statement and declaration an expression that yields a value.&amp;#8221;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Of course what &lt;strong&gt;really&lt;/strong&gt; matters to an engineer is Python-the-platform rather than Python-the-language. Python famously comes with batteries included, and, stretching the metaphor, it also excels at integrating with the other batteries used in modern software applications. The packaging confusion is a side-effect of Python-the-platform&amp;#8217;s success. More on over-stretched batteries later &amp;#8230;&lt;/p&gt;
&lt;p&gt;The day had started with &lt;a href=&quot;http://www.mindviewinc.com&quot;&gt;Bruce Eckel&lt;/a&gt;&amp;#8217;s keynote on Software Archeology. Bruce Eckel is a relaxed and engaging speaker but I found his presentation rather flimsy. Its substance could (and did!) fit on to a couple of David Jones&amp;#8217; slides and the remainder dwelt a little too long on Bruce Eckel, his Java and C++ books, blogs, and &lt;a href=&quot;http://www.mindviewinc.com&quot;&gt;www.mindviewinc.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;During the rest of the day, I had a choice of 4 or 5 different presentations at any one time, generally on the subject of Python modules or frameworks. The common theme I took away is that &lt;strong&gt;people turn to Python to get things done&lt;/strong&gt;, and they&amp;#8217;re reluctant to turn back. As the afternoon drew on everyone regathered in the Adrian Boult Hall to listen to a brilliant series of lightning talks which developed on this same theme. We also heard a wonderful &lt;a href=&quot;http://europython09.blip.tv/file/2351409&quot;&gt;short story&lt;/a&gt; about the best way to wreck cars and software systems.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.europython.eu/gallery/europython-2009&quot;&gt;&lt;img alt=&quot;Sir Tony Hoare&quot; src=&quot;http://www.europython.eu/gallery/media/gallery-title/thumbs/3kxu_jpg_310x260_crop_q85.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;continue-reading&quot;/&gt;&lt;/p&gt;
&lt;p&gt;On the subject of car crashes, it seemed a shame to stem the flow of these talks and keep &lt;a href=&quot;http://research.microsoft.com/en-us/people/thoare/&quot;&gt;Sir Tony Hoare&lt;/a&gt; waiting in the wings in order to pull Guido van Rossum on stage, especially since Guido wasn&amp;#8217;t even at the conference. Nonetheless, the the benevolent dictator for life dutifully skyped in, and his face beamed up on the 12m&lt;sup&gt;2&lt;/sup&gt; screen. We could see and hear him. He couldn&amp;#8217;t hear us. The connection fizzed and chirped until all protocol broke down. Eventually the skype laptop popped up a message warning its batteries were running low, then promptly and mercifully shut down, ending the experiment.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/C._A._R._Hoare&quot;&gt;&lt;img src=&quot;http://upload.wikimedia.org/wikipedia/commons/thumb/7/70/CAR_Hoare.jpg/225px-CAR_Hoare.jpg&quot; alt=&quot;Sir Tony Hoare&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On walked Sir Tony Hoare, the programmer, software engineer, computer scientist and academic who now works for Microsoft research. His thoughtful keynote analysed the differences between science and engineering, and considered their interplay in the field of software development. His presentation challenged my way of thinking about software specification and program correctness, and the message on his closing slide was both shaming and inspirational:&lt;/p&gt;
&lt;blockquote&gt;&lt;h3&gt;One Day&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Software will be the most reliable component of every product which contains it&lt;/li&gt;
&lt;li&gt;Software engineering will be the most dependable of all engineering professions&lt;/li&gt;
&lt;li&gt;Because of the successful interplay of research
&lt;ul&gt;&lt;li&gt;into the science of programming&lt;/li&gt;
&lt;li&gt;and the engineering of software&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#8212; &lt;a href=&quot;http://research.microsoft.com/en-us/people/thoare/&quot;&gt;Tony Hoare&lt;/a&gt;, The Science of Computing and the Engineering of Software, 2009
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/thomasguest/3681644236/&quot; title=&quot;Enigma machine by Thomas Guest, on Flickr&quot;&gt;&lt;img style=&quot;float:right;&quot; src=&quot;http://farm4.static.flickr.com/3614/3681644236_2b40e5b726_m.jpg&quot; width=&quot;240&quot; height=&quot;199&quot; alt=&quot;Enigma machine&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sir Tony Hoare is a Turing Award winner. I think he said he&amp;#8217;d been working with computers for 50 years &amp;#8212; it may well have been longer. Certainly he remembered when ALGOL was the hot new language, poised to supplant FORTRAN. The conference provided an opportunity to go further back, to Turing himself, and to the first ever programmable digital computer. In another memorable keynote session after lunch &lt;a href=&quot;http://www.europython.eu/talks/speakers/index.html#greenish_simon&quot;&gt;Simon Greenish&lt;/a&gt; and &lt;a href=&quot;http://www.europython.eu/talks/speakers/index.html#black_sue&quot;&gt;Dr Sue Black&lt;/a&gt; spoke passionately about &lt;a href=&quot;http://www.bletchleypark.org.uk/&quot;&gt;Bletchley Park&lt;/a&gt;, the expansive Milton Keynes mansion which was converted into a code-breaking factory during the second World War and which is now a museum struggling to make ends meet. At the end of the presentation they unveiled a real Enigma machine to a huge round of applause.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Colossus_computer&quot;&gt;Colossus&lt;/a&gt;, the world&amp;#8217;s first ever programmable digital computer, &lt;a href=&quot;http://www.codesandciphers.org.uk/lorenz/rebuild.htm&quot;&gt;has been painstakingly rebuilt&lt;/a&gt; at Bletchley Park. Although it won&amp;#8217;t be running Python, it will resume its orginal task of cracking the &lt;a href=&quot;http://en.wikipedia.org/wiki/Lorenz_cipher&quot;&gt;Lorenz cipher&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.bletchleypark.org.uk&quot;&gt;&lt;img src=&quot;http://www.bletchleypark.org.uk/doc/image.rhtm/Head%20detail%20web.jpg&quot; alt=&quot;Statue of Turing at Bletchley Park&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There can be no such return for &lt;a href=&quot;http://www.turing.org.uk/turing/&quot;&gt;Alan Turing&lt;/a&gt;, who would have been 97 last week, but who tragically took his own life 55 years ago. He was a brilliant mathematician and scientist, famously eccentric, yet his papers on machine intelligence and computability remain highly accessible, forming the way we now think about computers. Over 11 thousand people worked at Bletchley Park during the war, and Alan Turing helped direct the decryption effort, a huge task which succeeded in shortening the war by two years and saving an estimated 22 million lives. In 2007 a statue of Alan Turing was erected at Bletchley Park. Dr Sue Black showed us a photo of his coffee mug which remains where he kept it, chained to a radiator.&lt;/p&gt;</description>
<dc:date>2009-07-02</dc:date>
<guid>https://wordaligned.org/articles/europython-2009</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>https://wordaligned.org/articles/europython-2009</link>
<category>Europython</category>
</item>

</channel>
</rss>
