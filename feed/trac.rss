<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" >
<channel>
<title>Word Aligned</title>
<link>http://wordaligned.org</link>
<description>tales from the code face</description>
<dc:creator>tag@wordaligned.org</dc:creator>
<language>en-gb</language>
<item>
<title>Reversing Hofstadter&#8217;s Law</title>
<description>&lt;h3 id=&quot;exponential-overrun&quot;&gt;Exponential overrun&lt;/h3&gt;
&lt;p&gt;I arrived at the station a few minutes early. The information board showed the train was running on time so I went straight down to the platform. No time for a snack. I glanced at the Passenger&amp;#8217;s Charter poster in passing &amp;#8212; a bar-chart showed the trains were 90% reliable.&lt;/p&gt;
&lt;p&gt;Just before the train was due the information board flashed up an alteration &amp;#8212; the train was in fact running 10 minutes late. 10 minutes later a second alteration stated the train would now be 20 minutes late. When the train finally departed 40 minutes behind schedule I was hungry and cross.&lt;/p&gt;
&lt;p&gt;As a software developer, it probably seems like I&amp;#8217;ve got a nerve moaning about the trains running late. We get it wrong all the time, and there aren&amp;#8217;t any &lt;a href=&quot;http://www.translink.co.uk/leaves.asp&quot;&gt;leaves on our lines&lt;/a&gt;. Computers are supposed to be predictable, but for some reason, &lt;a href=&quot;http://en.wikipedia.org/wiki/Hofstadter&#x27;s_Law&quot;&gt;Hofstadter&amp;#8217;s Law&lt;/a&gt; gets us every time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It always takes longer than you expect, even when you take into account &lt;a href=&quot;http://en.wikipedia.org/wiki/Hofstadter&#x27;s_Law&quot;&gt;Hofstadter&amp;#8217;s Law&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span /&gt;Any computer scientist can spot the recursion and the associated risk of exponential overrun. Doubling original estimates won&amp;#8217;t bring things in on time, it just delays completion by a factor of four. And so on. &amp;#8220;It&amp;#8221; never gets done, and the only escape is to break out of the cycle and call it a day; except, of course, it will be rather longer than a day by then.&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;continue-reading&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;spectacular-errors&quot;&gt;Spectacular errors&lt;/h3&gt;
&lt;p&gt;It&amp;#8217;s futile to compare running trains on time to delivering software on time, but Virgin Trains do show use how to get things spectacularly wrong.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Defer admitting to problems until they&amp;#8217;re painfully obvious to everyone involved. If the information board had said the train was running 40 minutes late in the first place, I&amp;#8217;d have been far less annoyed. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Paint a positive picture. It&amp;#8217;s galling that the train companies publish figures so far out of line with my personal experience.  Either late and cancelled trains upset me disproportionately, or I have higher expectations of what it means to be punctual, or the statistics apply to train services I don&amp;#8217;t use. Probably all three.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;bite-sized-chunks&quot;&gt;Bite-sized chunks&lt;/h3&gt;
&lt;p&gt;Running a software development project on time isn&amp;#8217;t like running a railway. As a passenger, I&amp;#8217;m not very flexible: I need to get from A to B, and want to know when I need to be at A in order to get to B on time. As a software customer, my requirements are rather more vague. Maybe I&amp;#8217;d like to get off at the first stop, thanks very much, or maybe C will turn out to be a better destination.&lt;/p&gt;
&lt;p&gt;Agile development techniques aim to offer customers this kind of control. By actively seeking their feedback at all stages of the project, we allow them to modify and customise their journey. It&amp;#8217;s software after all; it&amp;#8217;s meant to be soft. Tasks are reduced to bite-sized chucks &amp;#8212; if you&amp;#8217;re unsure how long something might take, chop it up &amp;#8212; and the team, including the customer, continually reviews progress. The journey becomes the focus as much as the destination. &lt;/p&gt;
&lt;p&gt;I adopt this approach as far as I can, and it&amp;#8217;s served me well day by day, week by week. &lt;/p&gt;
&lt;h3 id=&quot;biting-off-more-than-you-can-chew&quot;&gt;Biting off more than you can chew&lt;/h3&gt;
&lt;p&gt;Unfortunately I&amp;#8217;ve also seen agile aspirations come unstuck in the face of commercial reality. You&amp;#8217;re invited to tender, &lt;span /&gt;you specify, you cost, you plan, you grumble about Microsoft Project; you consider the competition, envisage the end game, pin an end date on the calendar. All of a sudden Hofstadter&amp;#8217;s Law has teeth.&lt;/p&gt;
&lt;p&gt;Unfortunately I haven&amp;#8217;t any easy answers here, just some glib observations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This model of financing software development doesn&amp;#8217;t work very well. &lt;/li&gt;
&lt;li&gt;The bigger the project, the worse things get. It hurts every time I hear about failures from the likes of EDS to set up some government IT system. Whoops! There go our taxes.&lt;/li&gt;
&lt;li&gt;Over-run isn&amp;#8217;t always a disaster. Some of the best pieces of software take longer to develop than initially expected, and benefit from it. Many open source projects recognise this and emphasize doing the right thing, doing it right, and confessing to problems at the expense of schedule.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;dog-food&quot;&gt;Dog Food&lt;/h3&gt;
&lt;p&gt;Here&amp;#8217;s an example of that last point. &lt;a href=&quot;http://trac.edgewall.org&quot;&gt;Trac&lt;/a&gt; is a software product for project management. Trac&amp;#8217;s own development is managed as a Trac project. I&amp;#8217;ve been watching the Trac project &lt;a href=&quot;http://trac.edgewall.org/roadmap&quot;&gt;roadmap&lt;/a&gt; for a while, since I needed to set up a local Trac project, and wondered whether to wait for the next point release (Version 1.1, which was apparently imminent when I started looking). That point release is now 3 months overdue. &lt;/p&gt;
&lt;p&gt;Has the delay held us up? No! I decided to simply install an earlier version, and I haven&amp;#8217;t regretted it. I&amp;#8217;m confident I can upgrade to a subsequent release if I need to. Does it mean that I can&amp;#8217;t trust Trac as a project management tool (since their own projects run late)? Again, no. This picture reflects reality, and they&amp;#8217;re being open and honest about things. How many closed pieces of software have I purchased, which have since failed or needed a sequence of patches to keep them alive?&lt;/p&gt;
&lt;h3 id=&quot;under-promise-over-deliver&quot;&gt;Under-promise, over-deliver&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;ll end with another travel story, this one with a happy ending.&lt;/p&gt;
&lt;p&gt;My current passport was about to run out and we&amp;#8217;d booked a holiday abroad in &lt;em&gt;four weeks&amp;#8217;&lt;/em&gt; time. So I filled out the passport application form, checked it, paid the person at the post office an extra &amp;pound;7 to check it, and sent it off. According to the information leaflet, I could expect it back in two weeks, so there was some room for error. My new passport arrived in just one week.&lt;/p&gt;</description>
<dc:date>2007-10-09</dc:date>
<guid>http://wordaligned.org/articles/reversing-hofstadters-law</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/reversing-hofstadters-law</link>
<category>Trac</category>
</item>

<item>
<title>Source open, problem closed</title>
<description>&lt;p&gt;I &lt;a href=&quot;http://wordaligned.org/articles/trac-not-just-a-pretty-interface.html&quot;&gt;wrote&lt;/a&gt; a while back about &lt;a href=&quot;http://trac.edgewall.org&quot;&gt;trac&lt;/a&gt;. I continued to be impressed by it. Although it was fiddly to install, I notice that this should be improved by the next &lt;a href=&quot;http://trac.edgewall.org/wiki/TracDev/ReleaseNotes/0.11&quot;&gt;point release&lt;/a&gt;, which will be packaged in a &lt;a href=&quot;http://peak.telecommunity.com/DevCenter/PythonEggs&quot;&gt;python egg&lt;/a&gt;. And although the version we&amp;#8217;re using is only 0.10.2, it&amp;#8217;s proven itself remarkably solid. In fact we haven&amp;#8217;t encountered any bugs. Or at least we hadn&amp;#8217;t until today, when someone discovered that attempting to attach a small file to a wiki page resulted in an application error.&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;continue-reading&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Up until today we&amp;#8217;d been attaching pictures which had always worked just fine. Attempting to upload a small text file resulted in the web browser showing a big red error page filled with the following stack trace.&lt;/p&gt;
&lt;div class=&quot;typocode&quot;&gt;

&lt;pre class=&quot;prettyprint&quot;&gt;Traceback (most recent call last):
  File &quot;/usr/local/lib/python2.5/site-packages/trac/web/main.py&quot;, line 387, in dispatch_request
    dispatcher.dispatch(req)
  File &quot;/usr/local/lib/python2.5/site-packages/trac/web/main.py&quot;, line 238, in dispatch
    resp = chosen_handler.process_request(req)
  File &quot;/usr/local/lib/python2.5/site-packages/trac/attachment.py&quot;, line 361, in process_request
    self._do_save(req, attachment)
  File &quot;/usr/local/lib/python2.5/site-packages/trac/attachment.py&quot;, line 449, in _do_save
    size = upload.file.len
AttributeError: &amp;#x27;cStringIO.StringO&amp;#x27; object has no attribute &amp;#x27;len&amp;#x27;

&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://trac.edgewall.org&quot;&gt;Trac&lt;/a&gt; is a popular piece of software, and I had to believe someone else would have run into this bug. Sure enough, googling &lt;a href=&quot;http://www.google.com/search?q=AttributeError%3A+%27cStringIO.StringO%27+object+has+no+attribute+%27len%27&quot;&gt;&lt;code&gt;AttributeError: &#x27;cStringIO.StringO&#x27; object has no attribute &#x27;len&#x27;&lt;/code&gt;&lt;/a&gt; led me straight to &lt;a href=&quot;http://trac.edgewall.org/ticket/4311&quot;&gt;trac ticket #4311&lt;/a&gt;, and the happy news that this particular problem had been fixed. If you look at the ticket, you&amp;#8217;ll notice that it cross-references the actual &lt;a href=&quot;http://trac.edgewall.org/changeset/4459&quot;&gt;repository diff&lt;/a&gt; of the changes which fixed the problem &amp;#8212; a simple three line change to a single file in this case, and a nice demonstration of how &lt;a href=&quot;http://trac.edgewall.org&quot;&gt;trac&lt;/a&gt; integrates source control, defect tracking and a wiki.&lt;/p&gt;
&lt;p&gt;Since I didn&amp;#8217;t want to upgrade our trac installation just yet I applied the patch directly to &lt;code&gt;/usr/local/lib/python2.5/site-packages/trac/attachment.py&lt;/code&gt; (the file identified in the traceback), and all was well.&lt;/p&gt;
&lt;p&gt;This is of course an every day story from the world of open source software. If you stop and think about it, though, there are several layers of openness.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The error message was open and obvious. I didn&amp;#8217;t have to search through a server log. Application developers are usually taught hide tracebacks from end users &amp;#8212; they&amp;#8217;re deemed too frightening.  In this case, though, I didn&amp;#8217;t even have to leave my web browser to diagnose and find a fix to the problem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Trac opens up its own defect database for public access. As we&amp;#8217;ve seen, this provides a great example of trac in action. &lt;span /&gt;Many closed source projects would regard it as a sign of weakness to publish this kind of information, though I do think (perhaps due to the influence of the open source movement) this attitude is changing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The source files behind the application were open. All I had to do was tweak one of them using a text editor. No rebuild required.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
<dc:date>2007-06-27</dc:date>
<guid>http://wordaligned.org/articles/source-open-problem-closed</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/source-open-problem-closed</link>
<category>Trac</category>
</item>

<item>
<title>Trac &#8212; not just a pretty interface</title>
<description>&lt;p&gt;I&amp;#8217;ve been using &lt;a href=&quot;http://trac.edgewall.org&quot;&gt;trac&lt;/a&gt; for a project at work recently, and it really
does seem to be every bit as good as it looks.&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;continue-reading&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;tools-you-can-trust&quot;&gt;Tools you can trust&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;ve noted before how important it is to like the tools you use &lt;a href=&quot;http://wordaligned.org/articles/google-mail-holiday-auto-responder.html&quot;&gt;every day&lt;/a&gt;.
Until now, most project management tools left me cold: the
bug-trackers that provide clunky and restrictive front-ends to a
database, the meeting schedulers that only run on Windows XP, the
&lt;span /&gt;project planning tools that are so expensive only higher management
can afford them, and so sophisticated noone can get them to do what
they want.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://trac.edgewall.org&quot;&gt;Trac&lt;/a&gt;, though, is different. As you can see, the trac project team
eat their own dog food &amp;#8212; the trac home page &lt;em&gt;is&lt;/em&gt; a trac project &amp;#8212; which
as always is a good sign.&lt;/p&gt;
&lt;p&gt;Trac is a pleasure to use.&lt;/p&gt;
&lt;h3 id=&quot;killer-features&quot;&gt;Killer Features&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://trac.edgewall.org&quot;&gt;Trac&lt;/a&gt; grabbed my attention because it looks so good, and I suppose that
remains one of its killer features.&lt;/p&gt;
&lt;p&gt;Actually using it, though, what I really like is the way the tools
integrate with the &lt;a href=&quot;http://subversion.tigris.org&quot;&gt;version control system&lt;/a&gt;. Want to &lt;a href=&quot;http://trac.edgewall.org/wiki/TracLinks&quot;&gt;link&lt;/a&gt; from a wiki
page to a repository URL? No problem. Want to &lt;a href=&quot;http://trac.edgewall.org/wiki/TracLinks&quot;&gt;link&lt;/a&gt; to a changeset
associated with a repository revision? Easy peasy. Want a page which
displays the difference between any two repository revisions? Yep, it
can do that too.&lt;/p&gt;
&lt;p&gt;Browse the &lt;a href=&quot;http://trac.edgewall.org/timeline&quot;&gt;trac project&amp;#8217;s own timeline&lt;/a&gt;
to see some of these features in action.&lt;/p&gt;
&lt;h3 id=&quot;downsides&quot;&gt;Downsides&lt;/h3&gt;
&lt;p&gt;There are downsides.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://trac.edgewall.org&quot;&gt;trac&lt;/a&gt; was fiddly to install. I needed to get hold of
&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;, then build the python/subversion
bindings, then choose a database, then install the relevant python
database bindings, then clearsilver, then &amp;#8230; well, you get the
picture.&lt;/li&gt;
&lt;li&gt;trac is only at version &lt;a href=&quot;http://www.edgewall.org/blog/news/trac_0_10_2.html&quot;&gt;0.10.2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;trac tries to do everything. It&amp;#8217;s the source browser which thinks
it&amp;#8217;s a wiki which thinks it&amp;#8217;s a bug-tracker which thinks it&amp;#8217;s a project
planner.&lt;/li&gt;
&lt;li&gt;the only version control system trac works with is &lt;a href=&quot;http://subversion.tigris.org&quot;&gt;Subversion&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To answer these points in turn.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Yes, that is a concern. The lack of a one-click installer may put
off some users. Trac does not stand alone: it builds on proven
technologies &amp;#8212; &lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt;, relational databases, web servers.
Besides, you probably &lt;em&gt;can&lt;/em&gt; just grab a trac package for certain Linux
distributions.&lt;/li&gt;
&lt;li&gt;I haven&amp;#8217;t seen any problems (yet). As a product, it feels stable and well-tuned.&lt;/li&gt;
&lt;li&gt;You don&amp;#8217;t need to use all of trac&amp;#8217;s features. As a Subversion
repository browser alone it pays its way. As a repository browser combined
with a wiki, it&amp;#8217;s peerless.&lt;/li&gt;
&lt;li&gt;You can make this an upside by upgrading to &lt;a href=&quot;http://subversion.tigris.org&quot;&gt;Subversion&lt;/a&gt;!&lt;/li&gt;
&lt;/ol&gt;</description>
<dc:date>2006-12-20</dc:date>
<guid>http://wordaligned.org/articles/trac-not-just-a-pretty-interface</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/trac-not-just-a-pretty-interface</link>
<category>Trac</category>
</item>

<item>
<title>Wiki Markup</title>
<description>&lt;p&gt;I&amp;#8217;m a big fan of wikis but one irritation is that they all have their
own markup syntax. I guess that&amp;#8217;s because the wiki is one of those sweet
web applications that every programmer wants to reinvent.&lt;/p&gt;
&lt;p&gt;On a fairly regular basis, and in order of personal preference, I use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://boost.org/tools/quickbook&quot;&gt;QuickBook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://trac.edgewall.org/wiki/TracWiki&quot;&gt;TracWiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.textism.com/tools/textile/&quot;&gt;Textile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mediawiki.org/&quot;&gt;MediaWiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There&amp;#8217;s some convergence between these mini-languages, but not a whole
lot. Ampersands and angle brackets are of course converted into
HTML-safe equivalents. Paragraphs and bulleted lists usually work as
you&amp;#8217;d expect. The other primary ingredients &amp;#8212; headings, links, images
&amp;#8212; vary between implementations.&lt;/p&gt;
&lt;p&gt;This post describes what I think makes a good wiki markup syntax and why
I rate &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; so highly.&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;continue-reading&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;bigger-better&quot;&gt;Bigger != Better&lt;/h3&gt;
&lt;p&gt;Given the number of wiki variants out there, most users are unlikely
to remember even the basics of any single wiki markup
syntax.  Ideally, then, the wiki markup rules should be simple &amp;#8212;
simple enough to fit on a post-it note (or a post-it note sized
block of pixels on a screen) which the user can refer to.&lt;/p&gt;
&lt;p&gt;I wouldn&amp;#8217;t use this criterion to rule out a more complex markup
syntax. &lt;a href=&quot;http://www.mediawiki.org/&quot;&gt;MediaWiki&lt;/a&gt; is probably about as complex a markup as there
is but it still manages to keep the simple things simple.&lt;/p&gt;
&lt;p&gt;All things being equal, though, I prefer a compact set of markup rules.&lt;/p&gt;
&lt;h3 id=&quot;well-documented&quot;&gt;Well Documented&lt;/h3&gt;
&lt;p&gt;It goes without saying that the wiki markup rules should be well
documented. How else is an end user to work out what to do?&lt;/p&gt;
&lt;p&gt;I think it&amp;#8217;s also plain that a wiki markup should be self-documented,
by which I mean the
&lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;documentation&lt;/a&gt;
should be written using
&lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax.text&quot;&gt;itself&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;escape-to-xhtml&quot;&gt;Escape to (X)HTML&lt;/h3&gt;
&lt;p&gt;Noone expects a wiki syntax to do everything HTML can, so there&amp;#8217;d
better be a way of escaping the normal wiki markup rules to include
raw HTML in a document.  For example, there have been a number of
attempts to provide a wiki syntax for tables, but none works quite as well
as an HTML table &amp;#8212; so a wiki should simply provide a way for HTML
tables to be introduced into a document.&lt;/p&gt;
&lt;p&gt;There&amp;#8217;s another side to this. Sometimes we simply want to stop normal
wiki processing from happening. If the underscore is normally used to
emphasize words &lt;em&gt;like this&lt;/em&gt;, then we&amp;#8217;d better be able to escape this
behaviour when we want to see the underscores _like this_.&lt;/p&gt;
&lt;div class=&quot;typocode&quot;&gt;&lt;div class=&quot;codetitle&quot;&gt;escaping underscores with Markdown&lt;/div&gt;

&lt;pre class=&quot;prettyprint&quot;&gt;If the underscore is normally used to emphasize
words _like this_, then we&amp;#x27;d better be able to
escape this behaviour when we want to see
the underscores \_like this\_.

&lt;/pre&gt;

&lt;/div&gt;

&lt;h3 id=&quot;conformance-tests&quot;&gt;Conformance Tests&lt;/h3&gt;
&lt;p&gt;A good wiki markup syntax may well have a life outside its native wiki
implementation. It could be used in other wikis or blogs. It could become a
general purpose HTML templating application.&lt;/p&gt;
&lt;p&gt;If it&amp;#8217;s to have any hope of standing on its own like this, it had
better come with a decent set of conformance tests: that is, a set of
test inputs and expected outputs.&lt;/p&gt;
&lt;p&gt;The existence of such a suite helps explain why you can find
trustworthy &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; implementations in a variety of popular
high-level languages (Perl, PHP, Python, Ruby &amp;#8230;).&lt;/p&gt;
&lt;h3 id=&quot;suck-it-and-see&quot;&gt;Suck it and See&lt;/h3&gt;
&lt;p&gt;Most wikis provide a page to be used for experimentation &amp;#8212; it&amp;#8217;s often
called something like &amp;#8220;SandBox&amp;#8221;. A superior better wiki markup syntax
will also host such a facility online. You can try out Markdown
&lt;a href=&quot;http://daringfireball.net/projects/markdown/dingus&quot;&gt;here&lt;/a&gt; and
Textile &lt;a href=&quot;http://www.textism.com/tools/textile/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;and-the-winner-is&quot;&gt;And the Winner is &amp;#8230;&lt;/h3&gt;
&lt;p&gt;No suprises here: I said at the outset that &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; is my favourite. It
more than meets all the criteria mentioned above which already puts
it one step ahead of most alternatives. It also wins points for:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Explaining its design goals so clearly:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Readability, however, is emphasized above all else. A
Markdown-formatted document should be publishable as-is, as plain
text, without looking like it&amp;#8217;s been marked up with tags or formatting
instructions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Working so well with an &amp;#8220;aware&amp;#8221; text editor. I write the content for
   my &lt;a href=&quot;http://www.wordaligned.org&quot;&gt;web site&lt;/a&gt; in Markdown using
   &lt;a href=&quot;http://www.gnu.org/software/emacs/&quot;&gt;emacs&lt;/a&gt;, and the emacs text mode
   does the right thing when I&amp;#8217;m writing lists, blockquotes etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Providing superior support for
   &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax#link&quot;&gt;links&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://boost.org/tools/quickbook&quot;&gt;Quickbook&lt;/a&gt; deserves a special mention too, since it generates not HTML
but &lt;a href=&quot;http://docbook.org&quot;&gt;DocBook XML&lt;/a&gt;, and hence can be used as a starting point for both
&lt;a href=&quot;http://wordaligned.org/docs/softdoc_overload/index.html&quot;&gt;online and printed&lt;/a&gt;
versions of a document.&lt;/p&gt;</description>
<dc:date>2006-12-03</dc:date>
<guid>http://wordaligned.org/articles/wiki-markup</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/wiki-markup</link>
<category>Trac</category>
</item>

<item>
<title>Spam, Typo, Subversion Logs</title>
<description>&lt;p&gt;This &lt;a href=&quot;http://blog.wordaligned.org&quot;&gt;blog&lt;/a&gt; got hit by some spam promoting online gambling sites,
even though I&amp;#8217;d cranked up most of the built in anti-spam settings. I
went across to the &lt;a href=&quot;http://www.typosphere.org&quot;&gt;Typo&lt;/a&gt; website looking for advice and discovered:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Typo Trac is currently offline because of a high level of
spam. It shall return as soon as we&amp;#8217;ve got some more protection
added to it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Unfunnily enough, I experimented with an open &lt;a href=&quot;http://trac.edgewall.org/&quot;&gt;Trac&lt;/a&gt; project a while
back and it too received spam contributions cunningly hidden
where a regular reader wouldn&amp;#8217;t notice.&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;continue-reading&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;examining-the-typo-subversion-logs&quot;&gt;Examining the Typo Subversion Logs&lt;/h4&gt;
&lt;p&gt;Fortunately the &lt;a href=&quot;http://www.typosphere.org&quot;&gt;Typo&lt;/a&gt; Subversion server remains up and running. I
took a look at the log files to see if there were any spam-related
improvements since I&amp;#8217;d originally installed Typo and the latest release
(4.0.3 at the time of writing). There were a few hits.&lt;/p&gt;
&lt;div class=&quot;typocode&quot;&gt;

&lt;pre class=&quot;prettyprint&quot;&gt;$ svn log -r1133:1231 svn://typosphere.org/typo | grep spam
Add spam setting for Akismet key.  I still need to write the Akismet glue code, but it won&amp;#x27;t work without a key.
Big spam filtering upgrade.
Comments (and trackbacks) that fail the spam check are marked as unpublished
registering of spam/ham classification with akismet). JustPresumedHam
of articles whose classification you have confirmed as well as a simple spam/ham
Use published_at for comment spam checks.  Closes #1089

&lt;/pre&gt;

&lt;/div&gt;

&lt;h4 id=&quot;a-closer-examination&quot;&gt;A Closer Examination&lt;/h4&gt;
&lt;p&gt;This superficial inspection suggests that, out of 99 changes, 4 relate
to spam &amp;#8212; suggesting that the &lt;a href=&quot;http://www.typosphere.org&quot;&gt;Typo&lt;/a&gt; developers spent less than 5%
of their effort making anti-spam changes in the period concerned.&lt;/p&gt;
&lt;p&gt;A more useful statistic would be the number of files which were
modified for anti-spam purposes. It&amp;#8217;s rather harder to extract this
number using simple shell programs such as &lt;code&gt;grep&lt;/code&gt; so I wrote a
&lt;a href=&quot;http://python.org&quot;&gt;Python&lt;/a&gt; program to analyse the the &lt;a href=&quot;http://svnbook.red-bean.com/en/1.2/svn.ref.svn.c.log.html&quot;&gt;svn log&lt;/a&gt; output. I used the
&lt;code&gt;--xml&lt;/code&gt; option to the &lt;a href=&quot;http://svnbook.red-bean.com/en/1.2/svn.ref.svn.c.log.html&quot;&gt;svn log&lt;/a&gt; command to provide me with more
structured output, and the Python &lt;a href=&quot;http://www.python.org/doc/current/lib/module-xml.dom.minidom.html&quot;&gt;minidom&lt;/a&gt; XML module proved more than
up to the task of parsing this output.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s what this program told me.&lt;/p&gt;
&lt;div class=&quot;typocode&quot;&gt;

&lt;pre class=&quot;prettyprint&quot;&gt;$ svn log -r1133:1231 svn://typosphere.org/typo --xml --verbose | \
  process_svn_log.py spam akismet
Found /spam|akismet/i in 9/99 changes affecting 72/270 files.

&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Note that I included &lt;a href=&quot;http://akismet.com/&quot;&gt;Akismet&lt;/a&gt; in my pattern match. As I understand
it, &lt;a href=&quot;http://akismet.com/&quot;&gt;Akismet&lt;/a&gt; is a service specifically designed to protect blogs
against spam.&lt;/p&gt;
&lt;p&gt;I could dig even deeper and find out how many lines of code were
changed, but I don&amp;#8217;t think it&amp;#8217;s worth it. This is a pretty blunt tool,
but it does tell us that some smart programmers are having to spend
almost as much time fighting dumb spammers as they are writing more
useful code.&lt;/p&gt;
&lt;h4 id=&quot;the-svn-log-processor&quot;&gt;The svn log processor&lt;/h4&gt;
&lt;p&gt;For the record, here&amp;#8217;s my program. It&amp;#8217;s best suited to the job it
actually did but it&amp;#8217;s simple enough that I&amp;#8217;ll be able to adapt it for
use elsewhere.&lt;/p&gt;
&lt;div class=&quot;typocode&quot;&gt;&lt;div class=&quot;codetitle&quot;&gt;process_svn_log.py&lt;/div&gt;

&lt;pre class=&quot;prettyprint&quot;&gt;&quot;&quot;&quot; This program filters &amp;#x27;svn log --xml --verbose&amp;#x27; output
    for log entries which match patterns.

This output has the form:
&amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;
&amp;lt;log&amp;gt;
&amp;lt;logentry
   revision=&quot;1133&quot;&amp;gt;
&amp;lt;author&amp;gt;scott&amp;lt;/author&amp;gt;
&amp;lt;date&amp;gt;2006-07-13T17:26:26.186291Z&amp;lt;/date&amp;gt;
&amp;lt;paths&amp;gt;
&amp;lt;path
   action=&quot;M&quot;&amp;gt;/trunk/app/views/admin/feedback/list.rhtml&amp;lt;/path&amp;gt;
&amp;lt;/paths&amp;gt;
&amp;lt;msg&amp;gt;Make search+pagination work right&amp;lt;/msg&amp;gt;
&amp;lt;/logentry&amp;gt;
&amp;lt;/log&amp;gt;
&quot;&quot;&quot;

def usage(program):
    print &quot;&quot;&quot;\
Usage: %s PATTERN ...
Searches the output from &amp;#x27;svn log --xml --verbose&amp;#x27; for log entries whose
message matches the supplied PATTERN(s) and yields summary statistics.
Example:
svn log -r1133:1231 svn://typosphere.org/typo --xml --verbose | %s spam&quot;&quot;&quot; % (
    program, program)

def elements(node, tagname):
    &quot; Return named child elements of a DOM node. &quot;
    return node.getElementsByTagName(tagname)

def count_paths(logentries):
    &quot; Count repository path changes logged. &quot;
    return sum(1
               for logentry in logentries
               for paths in elements(logentry, &quot;paths&quot;)
               for path in elements(paths, &quot;path&quot;))

def log_msg_matches(logentry, matcher):
    &quot; Return true if the logentry message matches, false otherwise. &quot;
    msgs = elements(logentry, &quot;msg&quot;)
    assert len(msgs) == 1, &quot;Require a single log message per log entry.&quot;
    return matcher(msgs[0].childNodes[0].data) is not None

def process(log, patterns):
    &quot; Process the input svn log, looking for messages matching the input patterns. &quot;
    import re
    pattern = &quot;|&quot;.join(patterns)
    matcher = re.compile(pattern, re.IGNORECASE).search
    entries = elements(log, &quot;logentry&quot;)
    matches = [entry for entry in entries
               if log_msg_matches(entry, matcher)]
    paths = count_paths(entries)
    matching_paths = count_paths(matches)

    print &quot;Found /%s/i in %d/%d changes affecting %d/%d files.&quot; % (
        pattern, len(matches), len(entries), matching_paths, paths)

def main(argv):
    if len(argv) == 1:
        usage(argv[0])
    else:
        from xml.dom.minidom import parse
        process(parse(sys.stdin), argv[1:])

if __name__ == &quot;__main__&quot;:
    import sys
    main(sys.argv)

&lt;/pre&gt;

&lt;/div&gt;</description>
<dc:date>2006-11-27</dc:date>
<guid>http://wordaligned.org/articles/spam-typo-subversion-logs</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/spam-typo-subversion-logs</link>
<category>Trac</category>
</item>

</channel>
</rss>
