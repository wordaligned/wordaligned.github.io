<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" >
<channel>
<title>Word Aligned</title>
<link>http://wordaligned.org</link>
<description>tales from the code face</description>
<dc:creator>tag@wordaligned.org</dc:creator>
<language>en-gb</language>
<item>
<title>Tell me about &#8230; Virtualization</title>
<description>&lt;div class="toc"&gt;
&lt;h2&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocintroduction" name="toc0" id="toc0"&gt;Introduction&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocvirtualization-in-general" name="toc1" id="toc1"&gt;Virtualization in general&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toccreating-a-virtual-machine" name="toc2" id="toc2"&gt;Creating a virtual machine&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocheres-one-we-made-earlier" name="toc3" id="toc3"&gt;Here&amp;#8217;s one we made earlier&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocrunning-a-virtual-machine" name="toc4" id="toc4"&gt;Running a virtual machine&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocperipheral-access" name="toc5" id="toc5"&gt;Peripheral Access&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocopportunities" name="toc6" id="toc6"&gt;Opportunities&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocconsiderations" name="toc7" id="toc7"&gt;Considerations&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocjust-for-fun" name="toc8" id="toc8"&gt;Just for fun&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocfurther-reading" name="toc9" id="toc9"&gt;Further reading&lt;/a&gt;
 &lt;/li&gt;

 &lt;li&gt;&lt;a href="http://wordaligned.org/articles/virtualization#tocthanks" name="toc10" id="toc10"&gt;Thanks&lt;/a&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc0" name="tocintroduction" id="tocintroduction"&gt;Introduction&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Virtualization solves a computing problem by adding a layer of indirection. The problem being: how to run multiple operating systems on a single computer; and the indirection: to slip a software shim between a guest operating system and the hosting platform, which continues to run its native operating system.
&lt;/p&gt;
&lt;img src="http://wordaligned.org/images/imac-parallels.png" alt="Imac running OS X, Windows XP, Linux"/&gt;

&lt;p&gt;An example makes this clear. I work on an Apple computer which runs OS X, a flavour of BSD Unix. To develop portable code which will build and run on Linux and Windows as well as OS X, I use virtualization software. Using this software enables my Apple computer to run (for example) Windows XP and Linux Fedora Core 7 as guest operating systems alongside its native OS X. Effectively, I have three computers running on the same physical machine with no need for extra power supplies, keyboards, mice, monitors and so on.
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.vmware.com"&gt;&lt;img src="http://wordaligned.org/images/vmware.gif" style="float:right" alt="VMware logo"/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://www.parallels.com/"&gt;Parallels Desktop&lt;/a&gt; virtualization software I use doesn&amp;#8217;t come free but it&amp;#8217;s cheaper and more convenient than buying more hardware. &lt;a href="http://www.vmware.com"&gt;VMware&lt;/a&gt;, perhaps the single biggest name in virtualization, does offer free entry-level products for doing a similar job on Windows and Linux platforms.
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.parallels.com"&gt;&lt;img src="http://wordaligned.org/images/parallels-logo.gif" style="float:right" alt="Parallels logo"/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;This article will not provide details on installing and configuring virtualization software, troubleshooting problems, and so on: the products have matured to the extent that these details are hardly needed, and any problems are quickly answered by online forums. We won&amp;#8217;t attempt to explain how exactly virtualization works. Instead, we&amp;#8217;ll talk more about what virtualization is, how we can use it, and why we should be interested it.
&lt;/p&gt;
&lt;span id="continue-reading"/&gt;


&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc1" name="tocvirtualization-in-general" id="tocvirtualization-in-general"&gt;Virtualization in general&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Before we go further I should explain this article uses the term &amp;#8220;virtualization&amp;#8221; in the specific way described in the introduction. More generally, in computing, virtualization refers to the abstraction in software of the platform on which a program runs. The Java Virtual Machine is a well known example, allowing software developers to build a single executable which should run on any machine. The JVM also isolates the application from the rest of the machine. These advantages, of portability and isolation, also apply to the full  virtualization we&amp;#8217;ll discuss in this article.
&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc2" name="toccreating-a-virtual-machine" id="toccreating-a-virtual-machine"&gt;Creating a virtual machine&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Setting up a virtual machine feels just like setting up a normal machine, except you don&amp;#8217;t need new hardware. All you need is your host machine, the guest operating system media, and a suitable license to use it. With your host up and running, mount the install media, start up the virtualization software, click &amp;#8220;Create new machine&amp;#8221;, and follow the prompts. You&amp;#8217;ll have to specify what resources to grant the machine (disk space, RAM, etc.) but very quickly you&amp;#8217;ll be following the standard install procedure for your guest OS, selecting languages, packages and so on.
&lt;/p&gt;
&lt;p&gt;You don&amp;#8217;t need actual physical media: you can create your virtual machine by booting it up from a DVD image on disk or over a network in much the same way.
&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc3" name="tocheres-one-we-made-earlier" id="tocheres-one-we-made-earlier"&gt;Here&amp;#8217;s one we made earlier&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Actually, you may not require &lt;em&gt;any&lt;/em&gt; install media. Your virtualization software is capable of booting up a pre-built virtual machine. VMware terms such machines &lt;a href="http://www.vmware.com/appliances/"&gt;virtual appliances&lt;/a&gt;. Running such an appliance is as easy as downloading it (which, at around 300Mb or less, requires far less bandwidth than a typical install image) and clicking on the downloaded file.
&lt;/p&gt;
&lt;p&gt;What you&amp;#8217;ll typically be getting is a stripped-down Unix server, pre-built for a specific purpose, with stable, tested, compatible versions of whatever packages it requires for that purpose, and capable of operating within, say, 256Mb of RAM and as much hard disk as you&amp;#8217;re prepared to allow it. You can run this Unix server on a Windows machine. You can reconfigure it. You can even transfer it to a different machine.
&lt;/p&gt;
&lt;p&gt;As an example, suppose you want evaluate &lt;a href="http://trac.edgewall.org"&gt;Trac&lt;/a&gt;, an integrated version control and project management application. Trac may be open-source, popular and free, but I can personally vouch that on a Unix system it takes some setting up, and I can&amp;#8217;t imagine getting it to work natively on a Windows server. Using virtualization, you simply download a virtual machine which has been loaded with the latest stable release of Trac. Boot up this machine using your host virtualisation software and run it on any supported operating system &amp;#8212; Windows included. Do the same with &lt;a href="http://www.redmine.org"&gt;Redmine&lt;/a&gt;, another web-based project management application, and you can compare it with Trac. Once you&amp;#8217;ve completed your evaluation, delete the one you don&amp;#8217;t like and keep going with the other. As a virtual machine, it&amp;#8217;s easy to move it to a new host, if desired. 
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.jumpbox.com"&gt;&lt;img style="float:right" src="http://www.jumpbox.com/sites/all/themes/jumpbox/logo-white.gif" alt="JumpBox logo"/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;VMware provide instructions for creating appliances and host a &lt;a href="http://www.vmware.com/appliances/"&gt;library of such appliances&lt;/a&gt; on their website. Organisations like &lt;a href="http://www.jumpbox.com"&gt;JumpBox&lt;/a&gt; make a business out of providing virtual machines which run on a number of different virtual platforms.
&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc4" name="tocrunning-a-virtual-machine" id="tocrunning-a-virtual-machine"&gt;Running a virtual machine&lt;/a&gt;&lt;/h3&gt;
&lt;img style="float:right" src="http://wordaligned.org/images/win-xp-and-fc7.gif" alt="Virtual machine shortcuts"/&gt;

&lt;p&gt;Parallels Desktop creates shortcuts which I click on to power up the virtual machines. VMware on Windows does something similar. My perception is that these virtual machines boot as quickly as their physical counterparts would, but it could simply be that I&amp;#8217;m using the host system to do something else while they  start up in the background.
&lt;/p&gt;
&lt;p&gt;Exactly how the guest operating system integrates with the host varies. Some systems/configurations give you a window within a window; the guest user interface is displayed as a whole within a single window on the host, and you switch focus to this window to use it. More sophisticated systems integrate seamlessly, so you can tab between host and guest applications as if they were all running natively, and guest and host file browsers see both machines&amp;#8217; file systems transparently. The end-user experience is of the host and guest operating in parallel, as a single computer which can run software native to both systems.
&lt;/p&gt;
&lt;p&gt;In my experience, the first mode can be awkward to use. I much prefer the second: any friction context-switching between machines, and you find yourself preferring separate machines and a KVM, or using an X server to display X windows presented by a remote machine.
&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc5" name="tocperipheral-access" id="tocperipheral-access"&gt;Peripheral Access&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Which peripherals can the guest operating system access? Certainly, the guest wouldn&amp;#8217;t be much use if it couldn&amp;#8217;t make use of monitor, keyboard and mouse &amp;#8212; although you may suffer translation and configuration wrinkles due to the different keyboard layout and mouse button conventions used by different operating systems.
&lt;/p&gt;
&lt;p&gt;Access to other peripherals and interfaces will depend on the virtualization software: check the product information. My guest Windows XP can use its host&amp;#8217;s:
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
     network interfaces
 &lt;/li&gt;

 &lt;li&gt;
     USB ports
 &lt;/li&gt;

 &lt;li&gt;
     DVD drive
 &lt;/li&gt;

 &lt;li&gt;
     speakers
 &lt;/li&gt;

 &lt;li&gt;
     built-in camera
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Actually, I didn&amp;#8217;t realise it could use the camera, having never had cause to use the camera from within Windows, but a quick check shows it can. Access to networked printers also just works.
&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc6" name="tocopportunities" id="tocopportunities"&gt;Opportunities&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;ve already mentioned some obvious uses for virtualization, and I&amp;#8217;ll add some more which I&amp;#8217;ve found useful in the past:
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
     you can develop for multiple platforms using a single machine
 &lt;/li&gt;

 &lt;li&gt;
     you can download pre-built machines designed to run particular applications, saving you from package management headaches
 &lt;/li&gt;

 &lt;li&gt;
     if you use a laptop, virtualization allows you to carry many machines around with you: a sales person could demonstrate Unix-based software on a Windows machine, for example
 &lt;/li&gt;

 &lt;li&gt;
     you can script the creation of machines, and test e.g. clustered server configurations, without needing a rack filled with hardware
 &lt;/li&gt;

 &lt;li&gt;
     you can test on multiple platforms
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Even if your application itself is server-based and only runs on a single platform, virtualization allows you to test its web interface on multiple browsers. And even if your development is tied to a single operating system, virtualization allows you to keep old versions of that operating system alive on new hardware, and indeed to constrain the resources available to these old versions.
&lt;/p&gt;
&lt;p&gt;Hosting companies often use virtualization to create an indirection between user accounts and the hosting hardware farm. Users have root access to their own virtual machine yet are isolated from other root users on the same hardware (for example, rebooting a virtual machine doesn&amp;#8217;t affect other machines on the same host); and their virtual machine can be transferred between physical hosts without them even realising.
&lt;/p&gt;
&lt;p&gt;It would even be possible to distribute software as a virtual appliance. Rather than requiring your users to install version X of Python, version Y of SQLite, version Z of the database bindings and so on, you might consider distributing an entire system which runs as a virtual machine.
&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc7" name="tocconsiderations" id="tocconsiderations"&gt;Considerations&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Running a virtual machine requires real resources. I deliberately chose Windows XP over Vista for this reason; XP has the smaller footprint and it&amp;#8217;s all I personally need for developing software which ports to Windows.
&lt;/p&gt;
&lt;p&gt;As already mentioned, your guest operating system needs licensing. You need to pay to use Windows even if you&amp;#8217;re running it on an Apple computer and have already paid for OS X. You&amp;#8217;ll also need to go through the usual activation procedure.
&lt;/p&gt;
&lt;p&gt;You&amp;#8217;ll need to tend to your virtual machines like any others on your local network. They need naming and backing up. User accounts must be created. Depending on what presence they have on your network, you may want to configure DHCP, or take anti-virus measures. You also need to consider upgrading them.
&lt;/p&gt;
&lt;p&gt;I have run into wrinkles and irritations with the hardware abstraction side of virtualization. For example, the Apple keyboard I use doesn&amp;#8217;t map exactly to what I&amp;#8217;d want when using Windows. It&amp;#8217;s occasionally taken me some fiddling with X configuration files to get a Linux graphical interface displaying properly. Generally, though, someone else will have found and fixed the problem before you, and searching online forums turns up an answer.
&lt;/p&gt;
&lt;p&gt;In this article&amp;#8217;s introduction we classed virtualization as yet another computing problem solved by indirection. Indirection has a price. What about the accumulated expense of everything passing through the software shim which abstracts the platform? Surely a guest operating system can&amp;#8217;t be as fast as a native one on equivalent hardware? I have no hard figures to present here but personal experience suggests no perceptible difference: the only thing I have noticed is that my guest Windows XP seems to use only one of its host&amp;#8217;s two CPUs.
&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc8" name="tocjust-for-fun" id="tocjust-for-fun"&gt;Just for fun&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We&amp;#8217;ve seen it&amp;#8217;s possible and sensible for a platform to host a guest operating system within its native operating system. How about trying something silly? Could our guest operating system itself use virtualization to become a host for a guest of its own?
&lt;/p&gt;
&lt;p&gt;I gave it a go. Using Parallels Desktop on my OS X host, running Windows XP as a guest, I installed (the free) VMware Player virtualization software for Windows. So far, so good. Next I downloaded vmTrac, a 113Mb VMware appliance which packages Trac, Subversion, WebMin and Lighttpd on a FreeBSD core. I extracted the archive and opened the appliance using VMware Player. 
&lt;/p&gt;
&lt;p&gt;The picture shows my desktop. I&amp;#8217;ve used Google Chrome and Internet Explorer to access Trac and WebMin, which are running as web applications on FreeBSD, itself running as a Windows XP guest, and Windows XP is a guest on OS X.
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.flickr.com/photos/thomasguest/2851613748/" title="Virtualization by Thomas Guest, on Flickr"&gt;&lt;img src="http://farm4.static.flickr.com/3011/2851613748_0d3db38a4a.jpg" width="500" height="313" alt="virtualization" /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc9" name="tocfurther-reading" id="tocfurther-reading"&gt;Further reading&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Although virtualization products are mature and modern hardware is ready to accommodate them, the options and possibilities still take some explaining. You&amp;#8217;ll find plenty of good material on the &lt;a href="http://www.vmware.com"&gt;VMware&lt;/a&gt; and &lt;a href="http://www.parallels.com/"&gt;Parallels&lt;/a&gt; websites. It&amp;#8217;s also worth searching for other virtualization platforms. This is a growing market, there are lots of competitors and good deals to be had.
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.justsoftwaresolutions.co.uk/testing/testing-on-multiple-platforms-with-vmware.html"&gt;Testing on Multiple Platforms with VMware&lt;/a&gt;, by Anthony Williams provides a clear overview of the subject addressed in this article.
&lt;/p&gt;
&lt;hr /&gt;


&lt;h3&gt;&lt;a href="http://wordaligned.org/articles/virtualization#toc10" name="tocthanks" id="tocthanks"&gt;Thanks&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://accu.org/index.php/aboutus/aboutjournals"&gt;&lt;img style="float:right;" src="http://accu.org/content/images/journals/CVu205Cover.png" alt="CVu 20.5 cover"/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;This article was first published in CVu 20.5, an &lt;a href="http://accu.org/index.php/aboutus/aboutjournals"&gt;ACCU journal&lt;/a&gt;, and I would like to thank everyone at CVu for their help with it. In particular, I&amp;#8217;d like to thank Gail Ollis, who edited CVu 20.5, and who suggested contributors should try and step back from the details of &lt;strong&gt;how&lt;/strong&gt; to do something, and instead explain &lt;strong&gt;what&lt;/strong&gt; exactly that something is and &lt;strong&gt;why&lt;/strong&gt; it might be of interest.
&lt;/p&gt;
&lt;p&gt;This remit inspired several authors and CVu 20.5 turned out to be a great read. I particularly enjoyed Matthew Wilson&amp;#8217;s article, &amp;#8220;!(C ^ C++)&amp;#8221;. &lt;a href="http://en.wikipedia.org/wiki/Matthew_Wilson_(author)"&gt;Matthew Wilson&lt;/a&gt; is known as a C++ expert, but it came as no surprise to find he also knows his way around C. What did surprise me was to discover he prefers to use C in certain situations, and why.
&lt;/p&gt;</description>
<dc:date>2009-01-07</dc:date>
<guid>http://wordaligned.org/articles/virtualization</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/virtualization</link>
<category>Virtualization</category>
</item>

</channel>
</rss>
