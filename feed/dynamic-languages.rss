<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" >
<channel>
<title>Word Aligned</title>
<link>http://wordaligned.org</link>
<description>tales from the code face</description>
<dc:creator>tag@wordaligned.org</dc:creator>
<language>en-gb</language>
<item>
<title>Metablog</title>
<description>&lt;h3&gt;blog.wordaligned.org is dead&lt;/h3&gt;
&lt;p&gt;After over 14 months and 130 posts, I&amp;#8217;m closing down http://blog.wordaligned.org.
&lt;/p&gt;
&lt;p&gt;Why?
&lt;/p&gt;
&lt;p&gt;Well, despite trying, I still dislike the word &lt;strong&gt;blog&lt;/strong&gt;. No, I&amp;#8217;m not against neologisms and no, it&amp;#8217;s not as horrible as &lt;a href="http://martinfowler.com/bliki/WhatIsaBliki.html"&gt;&lt;strong&gt;bliki&lt;/strong&gt;&lt;/a&gt; &amp;#8212; but it just doesn&amp;#8217;t &lt;em&gt;smell&lt;/em&gt; nice. And no, I don&amp;#8217;t like &lt;em&gt;&amp;#8217;blog&lt;/em&gt;, &lt;em&gt;weblog&lt;/em&gt;, &lt;em&gt;web-log&lt;/em&gt; or &lt;em&gt;web log&lt;/em&gt; either.
&lt;/p&gt;
&lt;p&gt;There&amp;#8217;s a bit more to it than that, though. This article reviews my experience of running and writing a blog, lessons I&amp;#8217;ve learned, and my plans for the future.
&lt;/p&gt;
&lt;span id="continue-reading"/&gt;


&lt;h3&gt;Quality and Quantity&lt;/h3&gt;
&lt;p&gt;A couple of things Mark Dominus &lt;a href="http://blog.plover.com/meta/200710-delay.html"&gt;writes&lt;/a&gt; ring true:
&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I haven&amp;#8217;t posted in a couple of weeks, and I was wondering why. &amp;#8230; In the past ten days I&amp;#8217;ve written seven articles that are unfinished or that didn&amp;#8217;t work. Usually only about a third of my articles flop; this month a whole bunch flopped in a row. What can I say? Sometimes the muse delivers, and sometimes she doesn&amp;#8217;t.
&lt;/p&gt;
&lt;p&gt;I said a while back that I would try to publish more regularly, and not wait until every article was perfect. But I don&amp;#8217;t want to publish the unfinished articles yet. 
&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;My intention, when I started &lt;a href="http://blog.wordaligned.org"&gt;http://blog.wordaligned.org&lt;/a&gt;, was to publish more and edit less. It hasn&amp;#8217;t entirely worked out that way. Like Mark, much of what I write never makes it into production. I&amp;#8217;m not aiming for perfection, but if I can&amp;#8217;t get things to tie up I don&amp;#8217;t want them online. And for everything I actually write, there&amp;#8217;s an order of magnitude more which barely escapes my head.
&lt;/p&gt;
&lt;p&gt;Why would I ever have wanted to publish more and edit less? After all, there&amp;#8217;s no shortage of material on the web, and I&amp;#8217;d prefer to be noticed for a few thoughtful and original contributions, rather than volume. Here are some reasons:
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
     I get a huge kick out of immediate publication to a world audience (&amp;#8220;Hello World!&amp;#8221;)
 &lt;/li&gt;

 &lt;li&gt;
     I&amp;#8217;m trying to find out what my subject is and have been using blog.wordaligned.org as a space to explore
 &lt;/li&gt;

 &lt;li&gt;
     I half hoped, at the outset, that readers would help with this exploration &amp;#8212; that I&amp;#8217;d be able feed off their comments
 &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Hosting a Web Application&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;ve carefully avoided user interface development for most of my programming career. Now that the net is the computer and the browser the interface, I want to catch up. The dynamic languages I prefer have come into their own. I&amp;#8217;d hoped to learn something about &lt;a href="http://www.rubyonrails.org"&gt;Ruby on Rails&lt;/a&gt; by deploying a Ruby on Rails application (blog.wordaligned.org uses the &lt;a href="http://typosphere.org/"&gt;Typo&lt;/a&gt; blog engine, which itself runs on Ruby on Rails).
&lt;/p&gt;
&lt;p&gt;In fact I&amp;#8217;ve not learned much about Ruby on Rails. I&amp;#8217;ve migrated between versions a couple of times, written a plugin or two, tweaked some settings &amp;#8212; but that&amp;#8217;s about it. This has been a spare time activity, and I&amp;#8217;ve always given priority to writing new material.
&lt;/p&gt;
&lt;p&gt;What I have learned, the hard way, is that a dynamic web application can be slow and hungry. I rent space on a shared server, and the relationship has become uncomfortable &amp;#8212; mainly because the &lt;a href="http://typosphere.org/"&gt;blog application&lt;/a&gt; keeps banging its head against the limits imposed by the hosting company. Probably the sensible thing would be to upgrade my hosting plan or find another host, but I kind of like the deal I&amp;#8217;ve got at &lt;a href="http://textdrive.com"&gt;TextDrive&lt;/a&gt;. The support is excellent, and they&amp;#8217;re permissive about what you can do with your site.
&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve also learned (again!) I&amp;#8217;d rather use libraries than frameworks. Quite simply, I don&amp;#8217;t know enough about the problems Ruby on Rails is trying to solve. I need to get back to basics and do it myself: to figure out how to generate pages and feeds, how to handle persistence and indexing. Then, when I&amp;#8217;ve reinvented a few wheels, I might just get it.
&lt;/p&gt;

&lt;h3&gt;Comments&lt;/h3&gt;
&lt;p&gt;Comments have been the worst and best thing about running a blog. The comment system for blog.wordaligned.org is very sluggish, and the interaction isn&amp;#8217;t quite right. Perhaps the speed issues arise because I&amp;#8217;ve gradually been ratcheting up the anti-spam filters: now these filters at least seem to be doing their job, but spam-bots continue to bombard blog.wordaligned.org in the hopes the weak spots will reappear. Meanwhile the few who have taken the trouble to post real comments have had to put up with a poor interface. For those few who have persisted, thanks!
&lt;/p&gt;
&lt;p&gt;One solution might be to migrate to WordPress or Movable Type, but I&amp;#8217;m not too excited about PHP.
&lt;/p&gt;

&lt;h3&gt;Long live wordaligned.org&lt;/h3&gt;
&lt;p&gt;As I said, I&amp;#8217;m dismantling blog.wordaligned.org. I plan to keep it alive in its current form for another week or so, then I&amp;#8217;ll start re-directing visitors to the right places on the new site.
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.wordaligned.org"&gt;Wordaligned.org&lt;/a&gt; looks very much like blog.wordaligned.org. The content hasn&amp;#8217;t changed, except that everything there relates, however tangentially, to software development (reflections on the Tour de France, pictures of dinosaurs, and so forth will move somewhere else).
   I&amp;#8217;ve retained the &lt;a href="http://quotedprintable.com/pages/scribbish"&gt;Scribbish&lt;/a&gt; theme, which I like: besides, one rule of software development is to change just one thing at a time, and as I&amp;#8217;ve noted before, &lt;a href="http://wordaligned.org/articles/lenient-browsers-and-wobbly-tables.html" title="Lenient Browsers and Wobbly Tables"&gt;re-working a theme&lt;/a&gt; can be a risky activity.
&lt;/p&gt;
&lt;p&gt;Underneath, though, it&amp;#8217;s all static pages generated offline from &lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; source using a blend of domestic and &lt;a href="http://www.freewisdom.org/projects/python-markdown"&gt;imported&lt;/a&gt; Python code. So I&amp;#8217;m hoping it will be quicker to access, more stable, easier to update, easier to develop and run locally, easier (should the need arise) to transfer elsewhere.
&lt;/p&gt;
&lt;p&gt;Comments, for the moment, are missing. I&amp;#8217;ll convert any comments made on blog.wordaligned.org at some point but I haven&amp;#8217;t decided how to solicit comments on &lt;code&gt;wordaligned.org&lt;/code&gt; &amp;#8212; that&amp;#8217;s one thing I&amp;#8217;d be delighted to out-source. For now, you can comment by &lt;a href="mailto:tag@wordaligned.org" title="mail me at tag@wordaligned.org"&gt;email&lt;/a&gt;. I&amp;#8217;d particularly like to hear any thoughts about spam-free zero-maintenance comment systems.
&lt;/p&gt;

&lt;h3&gt;Please update your bookmarks&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.wordaligned.org"&gt;Wordaligned.org&lt;/a&gt; is at &lt;strong&gt;http://www.wordaligned.org&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://feeds.wordaligned.org/wordaligned"&gt;feed&lt;/a&gt; for new material is at &lt;strong&gt;http://feeds.wordaligned.org/wordaligned&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;See you &lt;a href="http://www.wordaligned.org"&gt;there&lt;/a&gt;!
&lt;/p&gt;</description>
<dc:date>2007-11-12</dc:date>
<guid>http://wordaligned.org/articles/metablog.html</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/metablog.html</link>
<category>Dynamic Languages</category>
</item>

<item>
<title>Code completion for dynamic languages</title>
<description>&lt;p&gt;Here&amp;#8217;s an interesting &lt;a href="http://www.regdeveloper.co.uk/2007/02/01/making_sense_ruby/"&gt;article&lt;/a&gt; in which Huw Collingbourne describes
   his frustration with trying to program a smart code completion system
   for Visual Studio. The problem being, the code in question is
   &lt;a href="http://www.ruby-lang.org" title="Ruby Website"&gt;Ruby&lt;/a&gt;. One particularly juicy quotation reads:
&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;span /&gt;Ruby is a so-called &amp;#8220;dynamic&amp;#8221; language, which is a polite way of saying that it&amp;#8217;s hugely unpredictable.
&lt;/p&gt;
&lt;/blockquote&gt;&lt;span id="continue-reading"/&gt;

&lt;p&gt;He goes on to explain:
&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;A &lt;a href="http://www.ruby-lang.org" title="Ruby Website"&gt;Ruby&lt;/a&gt; program is so dynamic that you can never be sure what it is
   up to from one moment to the next. To take a simple example, when
   you write some stand-alone functions into the editor, those
   functions get bound into the base class of the entire Ruby class
   hierarchy. That means that every single Ruby class automatically
   &amp;#8220;inherits&amp;#8221; them - and the IntelliSense system is expected to know
   about it!
&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;Despite overtly grumbling about dynamic languages, the author does a
   good job of promoting them. &lt;span /&gt;Software is supposed to be soft and
   dynamic languages help keep it that way. Everything is
   open. Everything can be queried. Everything can be adapted.
&lt;/p&gt;

&lt;h4&gt;Emacs Python mode&lt;/h4&gt;
&lt;p&gt;My preferred IDE is &lt;a href="http://www.gnu.org/software/emacs"&gt;emacs&lt;/a&gt; &amp;#8212; whatever language I&amp;#8217;m using. It has a
   particularly nice &lt;a href="http://sourceforge.net/projects/python-mode"&gt;Python integration&lt;/a&gt;.
   Here&amp;#8217;s how it works:
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
     Pull up a full-screen window
 &lt;/li&gt;

 &lt;li&gt;
     Split the window vertically
 &lt;/li&gt;

 &lt;li&gt;
     Use one side for the code you&amp;#8217;re working on
 &lt;/li&gt;

 &lt;li&gt;
     Use the other side to run an interpreted &lt;a href="http://python.org"&gt;Python&lt;/a&gt; session
 &lt;/li&gt;

 &lt;li&gt;
     Switch sides as desired
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I continually select regions of code to execute. I continually step
   into the interpreter and use the &lt;a href="http://python.org"&gt;Python&lt;/a&gt; &lt;code&gt;help&lt;/code&gt; command to get help on
   modules and functions &amp;#8212; including the ones I&amp;#8217;m creating right now.
   I rework a function in one window then exercise it in the other. I
   sketch experimental code, run it, rub it out.
&lt;/p&gt;
&lt;p&gt;Collingbourne says:
&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Creating real
   &lt;a href="http://www.sapphiresteel.com/IntelliSense"&gt;IntelliSense&lt;/a&gt; is much
   harder. The only way to do it properly is to analyse the code much
   as the Ruby interpreter itself does. The big difference is that the
   interpreter only goes into operation when a program is complete &amp;#8230;
&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;He spots the answer in one sentence &amp;#8212; &lt;em&gt;to do it properly, you do have
   to hook into the interpreter and its powers of reflection&lt;/em&gt; &amp;#8212; then misses
   the point in the next. You just have to run the interpreter alongside the code
   you&amp;#8217;re developing, like emacs Python mode does.
&lt;/p&gt;

&lt;h4&gt;A cheat&amp;#8217;s guide to code-completion&lt;/h4&gt;
&lt;p&gt;Collingbourne also exposes some code-completion systems as &amp;#8220;cheats&amp;#8221;.
&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Some code-completion systems solve this problem in a cunning way -
   they cheat. Instead of working out what type of object x is at any
   given moment, taking into account all the difficult stuff such as
   its scope, inheritance and context, they work alphabetically. If
   someone enters a dot followed by the letters &amp;#8220;my&amp;#8221;, they drop down a
   list of names such as &amp;#8220;my_method&amp;#8221;, &amp;#8220;my_othermethod&amp;#8221; and
   &amp;#8220;my_random_guess&amp;#8221; whether or not those methods have anything to do
   with the object in question.
&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;Well, I&amp;#8217;m happy to cheat using &lt;a href="http://www.gnu.org/software/emacs"&gt;emacs&lt;/a&gt; in this way. The &lt;em&gt;&lt;/em&gt;&lt;code&gt;ALT-/&lt;/code&gt;&lt;em&gt;&lt;/em&gt;
   combination uses alphabetic completion and I use it more
   than any other key sequence, whatever document I&amp;#8217;m working on. More
   often than not, it does the right thing. As usual, simple solutions
   are better.
&lt;/p&gt;</description>
<dc:date>2007-02-02</dc:date>
<guid>http://wordaligned.org/articles/code-completion-for-dynamic-languages.html</guid>
<author>tag@wordaligned.org (Thomas Guest)</author>
<link>http://wordaligned.org/articles/code-completion-for-dynamic-languages.html</link>
<category>Dynamic Languages</category>
</item>

</channel>
</rss>
